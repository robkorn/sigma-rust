{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0","program":"/home/rob/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","elliptic_curve","--edition=2018","/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","--cfg","feature=\"default\"","--cfg","feature=\"getrandom\"","--cfg","feature=\"std\"","--cfg","feature=\"weierstrass\"","--cfg","feature=\"zeroize\"","-C","metadata=f6e1a5c558ccd451","-C","extra-filename=-f6e1a5c558ccd451","--out-dir","/home/rob/Programming/Ergo/projects/sigma-rust/sigma-tree/target/rls/debug/deps","-L","dependency=/home/rob/Programming/Ergo/projects/sigma-rust/sigma-tree/target/rls/debug/deps","--extern","generic_array=/home/rob/Programming/Ergo/projects/sigma-rust/sigma-tree/target/rls/debug/deps/libgeneric_array-4b988163389ae578.rmeta","--extern","getrandom=/home/rob/Programming/Ergo/projects/sigma-rust/sigma-tree/target/rls/debug/deps/libgetrandom-3eaacda92290c765.rmeta","--extern","subtle=/home/rob/Programming/Ergo/projects/sigma-rust/sigma-tree/target/rls/debug/deps/libsubtle-ccab2ce07302ced0.rmeta","--extern","zeroize=/home/rob/Programming/Ergo/projects/sigma-rust/sigma-tree/target/rls/debug/deps/libzeroize-cd6b00df37d9d5fc.rmeta","--cap-lints","allow","--error-format=json","--sysroot","/home/rob/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/rob/Programming/Ergo/projects/sigma-rust/sigma-tree/target/rls/debug/deps/libelliptic_curve-f6e1a5c558ccd451.rmeta"},"prelude":{"crate_id":{"name":"elliptic_curve","disambiguator":[12038292883803474745,8029145365334952288]},"crate_root":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src","external_crates":[{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[16221439354469382097,15565837348772828253]}},{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[15613252303691562375,4556165055238676072]}},{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[12269617896898487533,65142111397584226]}},{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/lib.rs","num":4,"id":{"name":"std","disambiguator":[12673765241971086519,1979875191208036248]}},{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[15862783141653200230,4773813417861420487]}},{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[501305773035659233,3889300012469539238]}},{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[9126002216567348836,15610270334556716503]}},{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[9479301707518706798,13352731276321566042]}},{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[15203654865662241151,17897348793673631766]}},{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[10290502124864695413,7672610073830174493]}},{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/lib.rs","num":11,"id":{"name":"backtrace_sys","disambiguator":[14838544226648722576,13006716085524361330]}},{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/lib.rs","num":12,"id":{"name":"hashbrown","disambiguator":[9246889555580827340,16878203682218964580]}},{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/lib.rs","num":13,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[8284748314555817558,4769950866534510046]}},{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/lib.rs","num":14,"id":{"name":"panic_unwind","disambiguator":[14671874173783541769,17969261176539820175]}},{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/lib.rs","num":15,"id":{"name":"generic_array","disambiguator":[9810382803070846902,2558830235434100492]}},{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/lib.rs","num":16,"id":{"name":"typenum","disambiguator":[12063132472242547677,13370633828427008234]}},{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/scalar.rs","num":17,"id":{"name":"zeroize","disambiguator":[1712467034412164141,3880212341288837417]}},{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/secret_key.rs","num":18,"id":{"name":"getrandom","disambiguator":[8228435480878630374,5359753681457646114]}},{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/secret_key.rs","num":19,"id":{"name":"cfg_if","disambiguator":[15827525173548159870,8372847108566091306]}},{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/secret_key.rs","num":20,"id":{"name":"libc","disambiguator":[13274541647785893459,1686673962777082215]}}],"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/lib.rs","byte_start":0,"byte_end":942,"line_start":1,"line_end":33,"column_start":1,"column_end":69}},"imports":[{"kind":"Use","ref_id":{"krate":15,"index":0},"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/lib.rs","byte_start":715,"byte_end":728,"line_start":23,"line_end":23,"column_start":9,"column_end":22},"alias_span":null,"name":"generic_array","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":76},"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/weierstrass.rs","byte_start":4584,"byte_end":4589,"line_start":7,"line_end":7,"column_start":23,"column_end":28},"alias_span":null,"name":"Curve","value":"","parent":{"krate":0,"index":66}},{"kind":"Use","ref_id":{"krate":0,"index":78},"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/weierstrass.rs","byte_start":4591,"byte_end":4597,"line_start":7,"line_end":7,"column_start":30,"column_end":36},"alias_span":null,"name":"Scalar","value":"","parent":{"krate":0,"index":66}},{"kind":"Use","ref_id":{"krate":0,"index":182},"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/weierstrass.rs","byte_start":4627,"byte_end":4647,"line_start":9,"line_end":9,"column_start":5,"column_end":25},"alias_span":null,"name":"CompressedCurvePoint","value":"","parent":{"krate":0,"index":66}},{"kind":"Use","ref_id":{"krate":0,"index":89},"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/weierstrass.rs","byte_start":4649,"byte_end":4668,"line_start":9,"line_end":9,"column_start":27,"column_end":46},"alias_span":null,"name":"CompressedPointSize","value":"","parent":{"krate":0,"index":66}},{"kind":"Use","ref_id":{"krate":0,"index":210},"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/weierstrass.rs","byte_start":4670,"byte_end":4692,"line_start":9,"line_end":9,"column_start":48,"column_end":70},"alias_span":null,"name":"UncompressedCurvePoint","value":"","parent":{"krate":0,"index":66}},{"kind":"Use","ref_id":{"krate":0,"index":91},"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/weierstrass.rs","byte_start":4694,"byte_end":4715,"line_start":9,"line_end":9,"column_start":72,"column_end":93},"alias_span":null,"name":"UncompressedPointSize","value":"","parent":{"krate":0,"index":66}},{"kind":"Use","ref_id":{"krate":0,"index":238},"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/weierstrass.rs","byte_start":4746,"byte_end":4755,"line_start":11,"line_end":11,"column_start":27,"column_end":36},"alias_span":null,"name":"PublicKey","value":"","parent":{"krate":0,"index":66}},{"kind":"Use","ref_id":{"krate":0,"index":175},"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/lib.rs","byte_start":896,"byte_end":901,"line_start":33,"line_end":33,"column_start":23,"column_end":28},"alias_span":null,"name":"Error","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":18},"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/lib.rs","byte_start":911,"byte_end":917,"line_start":33,"line_end":33,"column_start":38,"column_end":44},"alias_span":null,"name":"Scalar","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":48},"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/lib.rs","byte_start":931,"byte_end":940,"line_start":33,"line_end":33,"column_start":58,"column_end":67},"alias_span":null,"name":"SecretKey","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/lib.rs","byte_start":0,"byte_end":942,"line_start":1,"line_end":33,"column_start":1,"column_end":69},"name":"","qualname":"::","value":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":6},{"krate":0,"index":13},{"krate":0,"index":37},{"krate":0,"index":66},{"krate":0,"index":171}],"decl_id":null,"docs":" General purpose Elliptic Curve Cryptography (ECC) support, including types\n and traits for representing various elliptic curve forms, scalars, points,\n and public/secret keys composed thereof.","sig":null,"attributes":[{"value":"! General purpose Elliptic Curve Cryptography (ECC) support, including types","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/lib.rs","byte_start":0,"byte_end":78,"line_start":1,"line_end":1,"column_start":1,"column_end":79}},{"value":"! and traits for representing various elliptic curve forms, scalars, points,","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/lib.rs","byte_start":79,"byte_end":157,"line_start":2,"line_end":2,"column_start":1,"column_end":79}},{"value":"! and public/secret keys composed thereof.","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/lib.rs","byte_start":158,"byte_end":202,"line_start":3,"line_end":3,"column_start":1,"column_end":45}},{"value":"!","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/lib.rs","byte_start":203,"byte_end":206,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"! ## Minimum Supported Rust Version","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/lib.rs","byte_start":207,"byte_end":244,"line_start":5,"line_end":5,"column_start":1,"column_end":38}},{"value":"!","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/lib.rs","byte_start":245,"byte_end":248,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"! Rust **1.41** or higher.","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/lib.rs","byte_start":249,"byte_end":277,"line_start":7,"line_end":7,"column_start":1,"column_end":29}},{"value":"!","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/lib.rs","byte_start":278,"byte_end":281,"line_start":8,"line_end":8,"column_start":1,"column_end":4}},{"value":"! Minimum supported Rust version can be changed in the future, but it will be","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/lib.rs","byte_start":282,"byte_end":361,"line_start":9,"line_end":9,"column_start":1,"column_end":80}},{"value":"! done with a minor version bump.","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/lib.rs","byte_start":362,"byte_end":397,"line_start":10,"line_end":10,"column_start":1,"column_end":36}},{"value":"no_std","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/lib.rs","byte_start":399,"byte_end":409,"line_start":12,"line_end":12,"column_start":1,"column_end":11}},{"value":"forbid(unsafe_code)","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/lib.rs","byte_start":410,"byte_end":433,"line_start":13,"line_end":13,"column_start":1,"column_end":24}},{"value":"warn(missing_docs, rust_2018_idioms, unused_qualifications)","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/lib.rs","byte_start":434,"byte_end":497,"line_start":14,"line_end":14,"column_start":1,"column_end":64}}]},{"kind":"Mod","id":{"krate":0,"index":6},"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/error.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"error","qualname":"::error","value":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/error.rs","parent":null,"children":[{"krate":0,"index":7},{"krate":0,"index":175},{"krate":0,"index":181},{"krate":0,"index":179},{"krate":0,"index":177},{"krate":0,"index":10},{"krate":0,"index":12}],"decl_id":null,"docs":" Elliptic curve error types (opaque)\n","sig":null,"attributes":[{"value":"! Elliptic curve error types (opaque)","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/error.rs","byte_start":944,"byte_end":983,"line_start":1,"line_end":1,"column_start":1,"column_end":40}}]},{"kind":"Struct","id":{"krate":0,"index":175},"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/error.rs","byte_start":1085,"byte_end":1090,"line_start":7,"line_end":7,"column_start":12,"column_end":17},"name":"Error","qualname":"::error::Error","value":"","parent":null,"children":[],"decl_id":null,"docs":" Elliptic curve errors\n","sig":null,"attributes":[{"value":"/ Elliptic curve errors","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/error.rs","byte_start":1018,"byte_end":1043,"line_start":5,"line_end":5,"column_start":1,"column_end":26}}]},{"kind":"Mod","id":{"krate":0,"index":13},"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/scalar.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"scalar","qualname":"::scalar","value":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/scalar.rs","parent":null,"children":[{"krate":0,"index":14},{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":22},{"krate":0,"index":25},{"krate":0,"index":28},{"krate":0,"index":31},{"krate":0,"index":34}],"decl_id":null,"docs":" Scalar wire type\n","sig":null,"attributes":[{"value":"! Scalar wire type","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/scalar.rs","byte_start":1287,"byte_end":1307,"line_start":1,"line_end":1,"column_start":1,"column_end":21}}]},{"kind":"Struct","id":{"krate":0,"index":18},"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/scalar.rs","byte_start":1517,"byte_end":1523,"line_start":10,"line_end":10,"column_start":12,"column_end":18},"name":"Scalar","qualname":"::scalar::Scalar","value":"","parent":null,"children":[],"decl_id":null,"docs":" Scalar \"wire type\": byte array sized appropriately for a given elliptic\n curve's modulus.\n","sig":null,"attributes":[{"value":"/ Scalar \"wire type\": byte array sized appropriately for a given elliptic","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/scalar.rs","byte_start":1409,"byte_end":1484,"line_start":8,"line_end":8,"column_start":1,"column_end":76}},{"value":"/ curve's modulus.","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/scalar.rs","byte_start":1485,"byte_end":1505,"line_start":9,"line_end":9,"column_start":1,"column_end":21}}]},{"kind":"Method","id":{"krate":0,"index":24},"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/scalar.rs","byte_start":1697,"byte_end":1700,"line_start":17,"line_end":17,"column_start":12,"column_end":15},"name":"new","qualname":"<Scalar<Size>>::new","value":"fn (bytes: GenericArray<u8, Size>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new scalar from the given byte array\n","sig":null,"attributes":[{"value":"/ Create a new scalar from the given byte array","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/scalar.rs","byte_start":1636,"byte_end":1685,"line_start":16,"line_end":16,"column_start":5,"column_end":54}}]},{"kind":"Mod","id":{"krate":0,"index":37},"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/secret_key.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"secret_key","qualname":"::secret_key","value":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/secret_key.rs","parent":null,"children":[{"krate":0,"index":38},{"krate":0,"index":41},{"krate":0,"index":44},{"krate":0,"index":47},{"krate":0,"index":48},{"krate":0,"index":51},{"krate":0,"index":58},{"krate":0,"index":62}],"decl_id":null,"docs":" Secret keys for elliptic curves: private scalars.\n","sig":null,"attributes":[{"value":"! Secret keys for elliptic curves: private scalars.","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/secret_key.rs","byte_start":2430,"byte_end":2483,"line_start":1,"line_end":1,"column_start":1,"column_end":54}}]},{"kind":"Struct","id":{"krate":0,"index":48},"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/secret_key.rs","byte_start":2840,"byte_end":2849,"line_start":14,"line_end":14,"column_start":12,"column_end":21},"name":"SecretKey","qualname":"::secret_key::SecretKey","value":"SecretKey {  }","parent":null,"children":[{"krate":0,"index":50}],"decl_id":null,"docs":" Secret keys for Weierstrass curves: wrapper around scalar values used as\n secret keys.","sig":null,"attributes":[{"value":"/ Secret keys for Weierstrass curves: wrapper around scalar values used as","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/secret_key.rs","byte_start":2673,"byte_end":2749,"line_start":10,"line_end":10,"column_start":1,"column_end":77}},{"value":"/ secret keys.","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/secret_key.rs","byte_start":2750,"byte_end":2766,"line_start":11,"line_end":11,"column_start":1,"column_end":17}},{"value":"/","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/secret_key.rs","byte_start":2767,"byte_end":2770,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"/ Prevents accidental exposure and handles zeroization.","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/secret_key.rs","byte_start":2771,"byte_end":2828,"line_start":13,"line_end":13,"column_start":1,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":53},"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/secret_key.rs","byte_start":3121,"byte_end":3124,"line_start":27,"line_end":27,"column_start":12,"column_end":15},"name":"new","qualname":"<SecretKey<ScalarSize>>::new","value":"fn (bytes: GenericArray<u8, ScalarSize>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new secret key from a serialized scalar value\n","sig":null,"attributes":[{"value":"/ Create a new secret key from a serialized scalar value","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/secret_key.rs","byte_start":3051,"byte_end":3109,"line_start":26,"line_end":26,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":54},"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/secret_key.rs","byte_start":3309,"byte_end":3319,"line_start":34,"line_end":34,"column_start":12,"column_end":22},"name":"from_bytes","qualname":"<SecretKey<ScalarSize>>::from_bytes","value":"fn (bytes: impl AsRef<[u8]>) -> Result<Self, Error>","parent":null,"children":[],"decl_id":null,"docs":" Deserialize this secret key from a bytestring\n","sig":null,"attributes":[{"value":"/ Deserialize this secret key from a bytestring","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/secret_key.rs","byte_start":3248,"byte_end":3297,"line_start":33,"line_end":33,"column_start":5,"column_end":54}}]},{"kind":"Method","id":{"krate":0,"index":56},"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/secret_key.rs","byte_start":3576,"byte_end":3584,"line_start":41,"line_end":41,"column_start":12,"column_end":20},"name":"generate","qualname":"<SecretKey<ScalarSize>>::generate","value":"fn () -> Self","parent":null,"children":[],"decl_id":null,"docs":" Generate a new secret key using the operating system's\n cryptographically secure random number generator\n","sig":null,"attributes":[{"value":"/ Generate a new secret key using the operating system's","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/secret_key.rs","byte_start":3415,"byte_end":3473,"line_start":38,"line_end":38,"column_start":5,"column_end":63}},{"value":"/ cryptographically secure random number generator","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/secret_key.rs","byte_start":3478,"byte_end":3530,"line_start":39,"line_end":39,"column_start":5,"column_end":57}},{"value":"cfg(feature = \"getrandom\")","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/secret_key.rs","byte_start":3535,"byte_end":3564,"line_start":40,"line_end":40,"column_start":5,"column_end":34}}]},{"kind":"Method","id":{"krate":0,"index":57},"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/secret_key.rs","byte_start":3821,"byte_end":3834,"line_start":48,"line_end":48,"column_start":12,"column_end":25},"name":"secret_scalar","qualname":"<SecretKey<ScalarSize>>::secret_scalar","value":"fn (&self) -> &Scalar<ScalarSize>","parent":null,"children":[],"decl_id":null,"docs":" Expose the secret [`Scalar`] value this [`SecretKey`] wraps\n","sig":null,"attributes":[{"value":"/ Expose the secret [`Scalar`] value this [`SecretKey`] wraps","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/secret_key.rs","byte_start":3746,"byte_end":3809,"line_start":47,"line_end":47,"column_start":5,"column_end":68}}]},{"kind":"Mod","id":{"krate":0,"index":66},"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/weierstrass.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"weierstrass","qualname":"::weierstrass","value":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/weierstrass.rs","parent":null,"children":[{"krate":0,"index":67},{"krate":0,"index":82},{"krate":0,"index":121},{"krate":0,"index":162},{"krate":0,"index":165},{"krate":0,"index":170}],"decl_id":null,"docs":" Elliptic curves in short Weierstrass form.\n","sig":null,"attributes":[{"value":"cfg(feature = \"weierstrass\")","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/lib.rs","byte_start":820,"byte_end":851,"line_start":30,"line_end":30,"column_start":1,"column_end":32}},{"value":"! Elliptic curves in short Weierstrass form.","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/weierstrass.rs","byte_start":4463,"byte_end":4509,"line_start":1,"line_end":1,"column_start":1,"column_end":47}}]},{"kind":"Mod","id":{"krate":0,"index":67},"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/weierstrass/curve.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"curve","qualname":"::weierstrass::curve","value":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/weierstrass/curve.rs","parent":null,"children":[{"krate":0,"index":68},{"krate":0,"index":71},{"krate":0,"index":76},{"krate":0,"index":78},{"krate":0,"index":80}],"decl_id":null,"docs":" Elliptic curves in short Weierstrass form\n","sig":null,"attributes":[{"value":"! Elliptic curves in short Weierstrass form","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/weierstrass/curve.rs","byte_start":4758,"byte_end":4803,"line_start":1,"line_end":1,"column_start":1,"column_end":46}}]},{"kind":"Trait","id":{"krate":0,"index":76},"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/weierstrass/curve.rs","byte_start":4965,"byte_end":4970,"line_start":10,"line_end":10,"column_start":11,"column_end":16},"name":"Curve","qualname":"::weierstrass::curve::Curve","value":"Curve: Clone + Debug + Default + Eq + Ord + Send + Sync","parent":null,"children":[{"krate":0,"index":77}],"decl_id":null,"docs":" Elliptic curve in short Weierstrass form\n","sig":null,"attributes":[{"value":"/ Elliptic curve in short Weierstrass form","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/weierstrass/curve.rs","byte_start":4910,"byte_end":4954,"line_start":9,"line_end":9,"column_start":1,"column_end":45}}]},{"kind":"Type","id":{"krate":0,"index":77},"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/weierstrass/curve.rs","byte_start":5141,"byte_end":5151,"line_start":13,"line_end":13,"column_start":10,"column_end":20},"name":"ScalarSize","qualname":"::weierstrass::curve::Curve::ScalarSize","value":"type ScalarSize: ArrayLength<u8> + Add + Add<U1> + Eq + Ord + Unsigned;","parent":{"krate":0,"index":76},"children":[],"decl_id":null,"docs":" Size of an integer modulo p (i.e. the curve's order) when serialized\n as octets (i.e. bytes).\n","sig":null,"attributes":[{"value":"/ Size of an integer modulo p (i.e. the curve's order) when serialized","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/weierstrass/curve.rs","byte_start":5027,"byte_end":5099,"line_start":11,"line_end":11,"column_start":5,"column_end":77}},{"value":"/ as octets (i.e. bytes).","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/weierstrass/curve.rs","byte_start":5104,"byte_end":5131,"line_start":12,"line_end":12,"column_start":5,"column_end":32}}]},{"kind":"Type","id":{"krate":0,"index":78},"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/weierstrass/curve.rs","byte_start":5280,"byte_end":5286,"line_start":17,"line_end":17,"column_start":10,"column_end":16},"name":"Scalar","qualname":"::weierstrass::curve::Scalar","value":"crate::scalar::Scalar<<C as Curve>::ScalarSize>","parent":null,"children":[],"decl_id":null,"docs":" Alias for [`Scalar`] type for a given Weierstrass curve\n","sig":null,"attributes":[{"value":"/ Alias for [`Scalar`] type for a given Weierstrass curve","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/weierstrass/curve.rs","byte_start":5211,"byte_end":5270,"line_start":16,"line_end":16,"column_start":1,"column_end":60}}]},{"kind":"Type","id":{"krate":0,"index":80},"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/weierstrass/curve.rs","byte_start":5414,"byte_end":5423,"line_start":20,"line_end":20,"column_start":10,"column_end":19},"name":"SecretKey","qualname":"::weierstrass::curve::SecretKey","value":"crate::secret_key::SecretKey<<C as Curve>::ScalarSize>","parent":null,"children":[],"decl_id":null,"docs":" Alias for [`SecretKey`] type for a given Weierstrass curve\n","sig":null,"attributes":[{"value":"/ Alias for [`SecretKey`] type for a given Weierstrass curve","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/weierstrass/curve.rs","byte_start":5342,"byte_end":5404,"line_start":19,"line_end":19,"column_start":1,"column_end":63}}]},{"kind":"Mod","id":{"krate":0,"index":82},"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/weierstrass/point.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"point","qualname":"::weierstrass::point","value":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/weierstrass/point.rs","parent":null,"children":[{"krate":0,"index":83},{"krate":0,"index":84},{"krate":0,"index":85},{"krate":0,"index":89},{"krate":0,"index":91},{"krate":0,"index":182},{"krate":0,"index":205},{"krate":0,"index":207},{"krate":0,"index":201},{"krate":0,"index":195},{"krate":0,"index":197},{"krate":0,"index":188},{"krate":0,"index":185},{"krate":0,"index":93},{"krate":0,"index":99},{"krate":0,"index":102},{"krate":0,"index":104},{"krate":0,"index":210},{"krate":0,"index":233},{"krate":0,"index":235},{"krate":0,"index":229},{"krate":0,"index":223},{"krate":0,"index":225},{"krate":0,"index":216},{"krate":0,"index":213},{"krate":0,"index":107},{"krate":0,"index":113},{"krate":0,"index":116},{"krate":0,"index":118}],"decl_id":null,"docs":" Compressed and uncompressed Weierstrass elliptic curve points.","sig":null,"attributes":[{"value":"! Compressed and uncompressed Weierstrass elliptic curve points.","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/weierstrass/point.rs","byte_start":5486,"byte_end":5552,"line_start":1,"line_end":1,"column_start":1,"column_end":67}},{"value":"!","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/weierstrass/point.rs","byte_start":5553,"byte_end":5556,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! Serialized according to the `Elliptic-Curve-Point-to-Octet-String`","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/weierstrass/point.rs","byte_start":5557,"byte_end":5627,"line_start":3,"line_end":3,"column_start":1,"column_end":71}},{"value":"! algorithm described in SEC 1: Elliptic Curve Cryptography (Version 2.0)","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/weierstrass/point.rs","byte_start":5628,"byte_end":5703,"line_start":4,"line_end":4,"column_start":1,"column_end":76}},{"value":"! section 2.3.3 (page 10):","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/weierstrass/point.rs","byte_start":5704,"byte_end":5732,"line_start":5,"line_end":5,"column_start":1,"column_end":29}},{"value":"!","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/weierstrass/point.rs","byte_start":5733,"byte_end":5736,"line_start":6,"line_end":6,"column_start":1,"column_end":4}},{"value":"! <https://www.secg.org/sec1-v2.pdf>","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/weierstrass/point.rs","byte_start":5737,"byte_end":5775,"line_start":7,"line_end":7,"column_start":1,"column_end":39}}]},{"kind":"Type","id":{"krate":0,"index":89},"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/weierstrass/point.rs","byte_start":6077,"byte_end":6096,"line_start":16,"line_end":16,"column_start":10,"column_end":29},"name":"CompressedPointSize","qualname":"::weierstrass::point::CompressedPointSize","value":"<ScalarSize as Add<U1>>::Output","parent":null,"children":[],"decl_id":null,"docs":" Size of a compressed elliptic curve point for the given curve when\n serialized using `Elliptic-Curve-Point-to-Octet-String` encoding\n (including leading `0x02` or `0x03` tag byte).\n","sig":null,"attributes":[{"value":"/ Size of a compressed elliptic curve point for the given curve when","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/weierstrass/point.rs","byte_start":5877,"byte_end":5947,"line_start":13,"line_end":13,"column_start":1,"column_end":71}},{"value":"/ serialized using `Elliptic-Curve-Point-to-Octet-String` encoding","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/weierstrass/point.rs","byte_start":5948,"byte_end":6016,"line_start":14,"line_end":14,"column_start":1,"column_end":69}},{"value":"/ (including leading `0x02` or `0x03` tag byte).","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/weierstrass/point.rs","byte_start":6017,"byte_end":6067,"line_start":15,"line_end":15,"column_start":1,"column_end":51}}]},{"kind":"Type","id":{"krate":0,"index":91},"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/weierstrass/point.rs","byte_start":6342,"byte_end":6363,"line_start":21,"line_end":21,"column_start":10,"column_end":31},"name":"UncompressedPointSize","qualname":"::weierstrass::point::UncompressedPointSize","value":"<<ScalarSize as Add>::Output as Add<U1>>::Output","parent":null,"children":[],"decl_id":null,"docs":" Size of an uncompressed elliptic curve point for the given curve when\n serialized using the `Elliptic-Curve-Point-to-Octet-String` encoding\n (including leading `0x04` tag byte).\n","sig":null,"attributes":[{"value":"/ Size of an uncompressed elliptic curve point for the given curve when","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/weierstrass/point.rs","byte_start":6145,"byte_end":6218,"line_start":18,"line_end":18,"column_start":1,"column_end":74}},{"value":"/ serialized using the `Elliptic-Curve-Point-to-Octet-String` encoding","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/weierstrass/point.rs","byte_start":6219,"byte_end":6291,"line_start":19,"line_end":19,"column_start":1,"column_end":73}},{"value":"/ (including leading `0x04` tag byte).","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/weierstrass/point.rs","byte_start":6292,"byte_end":6332,"line_start":20,"line_end":20,"column_start":1,"column_end":41}}]},{"kind":"Struct","id":{"krate":0,"index":182},"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/weierstrass/point.rs","byte_start":6729,"byte_end":6749,"line_start":30,"line_end":30,"column_start":12,"column_end":32},"name":"CompressedCurvePoint","qualname":"::weierstrass::point::CompressedCurvePoint","value":"CompressedCurvePoint {  }","parent":null,"children":[{"krate":0,"index":184}],"decl_id":null,"docs":" Compressed elliptic curve points serialized according to the\n `Elliptic-Curve-Point-to-Octet-String` algorithm.","sig":null,"attributes":[{"value":"/ Compressed elliptic curve points serialized according to the","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/weierstrass/point.rs","byte_start":6429,"byte_end":6493,"line_start":23,"line_end":23,"column_start":1,"column_end":65}},{"value":"/ `Elliptic-Curve-Point-to-Octet-String` algorithm.","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/weierstrass/point.rs","byte_start":6494,"byte_end":6547,"line_start":24,"line_end":24,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/weierstrass/point.rs","byte_start":6548,"byte_end":6551,"line_start":25,"line_end":25,"column_start":1,"column_end":4}},{"value":"/ See section 2.3.3 of SEC 1: Elliptic Curve Cryptography (Version 2.0):","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/weierstrass/point.rs","byte_start":6552,"byte_end":6626,"line_start":26,"line_end":26,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/weierstrass/point.rs","byte_start":6627,"byte_end":6630,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"/ <https://www.secg.org/sec1-v2.pdf>","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/weierstrass/point.rs","byte_start":6631,"byte_end":6669,"line_start":28,"line_end":28,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":95},"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/weierstrass/point.rs","byte_start":7114,"byte_end":7124,"line_start":43,"line_end":43,"column_start":12,"column_end":22},"name":"from_bytes","qualname":"<CompressedCurvePoint<C>>::from_bytes","value":"fn <B> (into_bytes: B) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Create a new compressed elliptic curve point\n","sig":null,"attributes":[{"value":"/ Create a new compressed elliptic curve point","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/weierstrass/point.rs","byte_start":7054,"byte_end":7102,"line_start":42,"line_end":42,"column_start":5,"column_end":53}}]},{"kind":"Method","id":{"krate":0,"index":97},"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/weierstrass/point.rs","byte_start":7547,"byte_end":7555,"line_start":59,"line_end":59,"column_start":12,"column_end":20},"name":"as_bytes","qualname":"<CompressedCurvePoint<C>>::as_bytes","value":"fn (&self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Borrow byte slice containing compressed curve point\n","sig":null,"attributes":[{"value":"/ Borrow byte slice containing compressed curve point","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/weierstrass/point.rs","byte_start":7466,"byte_end":7521,"line_start":57,"line_end":57,"column_start":5,"column_end":60}},{"value":"inline","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/weierstrass/point.rs","byte_start":7526,"byte_end":7535,"line_start":58,"line_end":58,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":98},"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/weierstrass/point.rs","byte_start":7687,"byte_end":7697,"line_start":65,"line_end":65,"column_start":12,"column_end":22},"name":"into_bytes","qualname":"<CompressedCurvePoint<C>>::into_bytes","value":"fn (self) -> GenericArray<u8, CompressedPointSize<C::ScalarSize>>","parent":null,"children":[],"decl_id":null,"docs":" Obtain owned array containing compressed curve point\n","sig":null,"attributes":[{"value":"/ Obtain owned array containing compressed curve point","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/weierstrass/point.rs","byte_start":7605,"byte_end":7661,"line_start":63,"line_end":63,"column_start":5,"column_end":61}},{"value":"inline","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/weierstrass/point.rs","byte_start":7666,"byte_end":7675,"line_start":64,"line_end":64,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":210},"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/weierstrass/point.rs","byte_start":8696,"byte_end":8718,"line_start":103,"line_end":103,"column_start":12,"column_end":34},"name":"UncompressedCurvePoint","qualname":"::weierstrass::point::UncompressedCurvePoint","value":"UncompressedCurvePoint {  }","parent":null,"children":[{"krate":0,"index":212}],"decl_id":null,"docs":" Uncompressed elliptic curve points serialized according to the\n `Elliptic-Curve-Point-to-Octet-String` algorithm.","sig":null,"attributes":[{"value":"/ Uncompressed elliptic curve points serialized according to the","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/weierstrass/point.rs","byte_start":8394,"byte_end":8460,"line_start":96,"line_end":96,"column_start":1,"column_end":67}},{"value":"/ `Elliptic-Curve-Point-to-Octet-String` algorithm.","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/weierstrass/point.rs","byte_start":8461,"byte_end":8514,"line_start":97,"line_end":97,"column_start":1,"column_end":54}},{"value":"/","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/weierstrass/point.rs","byte_start":8515,"byte_end":8518,"line_start":98,"line_end":98,"column_start":1,"column_end":4}},{"value":"/ See section 2.3.3 of SEC 1: Elliptic Curve Cryptography (Version 2.0):","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/weierstrass/point.rs","byte_start":8519,"byte_end":8593,"line_start":99,"line_end":99,"column_start":1,"column_end":75}},{"value":"/","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/weierstrass/point.rs","byte_start":8594,"byte_end":8597,"line_start":100,"line_end":100,"column_start":1,"column_end":4}},{"value":"/ <https://www.secg.org/sec1-v2.pdf>","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/weierstrass/point.rs","byte_start":8598,"byte_end":8636,"line_start":101,"line_end":101,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":109},"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/weierstrass/point.rs","byte_start":9185,"byte_end":9195,"line_start":118,"line_end":118,"column_start":12,"column_end":22},"name":"from_bytes","qualname":"<UncompressedCurvePoint<C>>::from_bytes","value":"fn <B> (into_bytes: B) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Create a new uncompressed elliptic curve point\n","sig":null,"attributes":[{"value":"/ Create a new uncompressed elliptic curve point","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/weierstrass/point.rs","byte_start":9123,"byte_end":9173,"line_start":117,"line_end":117,"column_start":5,"column_end":55}}]},{"kind":"Method","id":{"krate":0,"index":111},"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/weierstrass/point.rs","byte_start":9571,"byte_end":9579,"line_start":133,"line_end":133,"column_start":12,"column_end":20},"name":"as_bytes","qualname":"<UncompressedCurvePoint<C>>::as_bytes","value":"fn (&self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Borrow byte slice containing uncompressed curve point\n","sig":null,"attributes":[{"value":"/ Borrow byte slice containing uncompressed curve point","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/weierstrass/point.rs","byte_start":9488,"byte_end":9545,"line_start":131,"line_end":131,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/weierstrass/point.rs","byte_start":9550,"byte_end":9559,"line_start":132,"line_end":132,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":112},"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/weierstrass/point.rs","byte_start":9699,"byte_end":9709,"line_start":139,"line_end":139,"column_start":12,"column_end":22},"name":"into_bytes","qualname":"<UncompressedCurvePoint<C>>::into_bytes","value":"fn (self) -> GenericArray<u8, UncompressedPointSize<C::ScalarSize>>","parent":null,"children":[],"decl_id":null,"docs":" Convert public key into owned byte array\n","sig":null,"attributes":[{"value":"/ Convert public key into owned byte array","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/weierstrass/point.rs","byte_start":9629,"byte_end":9673,"line_start":137,"line_end":137,"column_start":5,"column_end":49}},{"value":"inline","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/weierstrass/point.rs","byte_start":9678,"byte_end":9687,"line_start":138,"line_end":138,"column_start":5,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":121},"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/weierstrass/public_key.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"public_key","qualname":"::weierstrass::public_key","value":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/weierstrass/public_key.rs","parent":null,"children":[{"krate":0,"index":122},{"krate":0,"index":127},{"krate":0,"index":128},{"krate":0,"index":131},{"krate":0,"index":132},{"krate":0,"index":138},{"krate":0,"index":238},{"krate":0,"index":267},{"krate":0,"index":262},{"krate":0,"index":264},{"krate":0,"index":256},{"krate":0,"index":258},{"krate":0,"index":249},{"krate":0,"index":246},{"krate":0,"index":140},{"krate":0,"index":148},{"krate":0,"index":151},{"krate":0,"index":153},{"krate":0,"index":156},{"krate":0,"index":159}],"decl_id":null,"docs":" Public keys for Weierstrass curves: wrapper around compressed or\n uncompressed elliptic curve points.\n","sig":null,"attributes":[{"value":"! Public keys for Weierstrass curves: wrapper around compressed or","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/weierstrass/public_key.rs","byte_start":10557,"byte_end":10625,"line_start":1,"line_end":1,"column_start":1,"column_end":69}},{"value":"! uncompressed elliptic curve points.","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/weierstrass/public_key.rs","byte_start":10626,"byte_end":10665,"line_start":2,"line_end":2,"column_start":1,"column_end":40}}]},{"kind":"Type","id":{"krate":0,"index":138},"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/weierstrass/public_key.rs","byte_start":11036,"byte_end":11053,"line_start":17,"line_end":17,"column_start":10,"column_end":27},"name":"UntaggedPointSize","qualname":"::weierstrass::public_key::UntaggedPointSize","value":"<ScalarSize as Add>::Output","parent":null,"children":[],"decl_id":null,"docs":" Size of an untagged point for given elliptic curve.\n","sig":null,"attributes":[{"value":"/ Size of an untagged point for given elliptic curve.","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/weierstrass/public_key.rs","byte_start":10937,"byte_end":10992,"line_start":15,"line_end":15,"column_start":1,"column_end":56}}]},{"kind":"TupleVariant","id":{"krate":0,"index":240},"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/weierstrass/public_key.rs","byte_start":11440,"byte_end":11450,"line_start":28,"line_end":28,"column_start":5,"column_end":15},"name":"Compressed","qualname":"::weierstrass::public_key::PublicKey::Compressed","value":"PublicKey::Compressed(CompressedCurvePoint<C>)","parent":{"krate":0,"index":238},"children":[],"decl_id":null,"docs":" Compressed Weierstrass elliptic curve point\n","sig":null,"attributes":[{"value":"/ Compressed Weierstrass elliptic curve point","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/weierstrass/public_key.rs","byte_start":11388,"byte_end":11435,"line_start":27,"line_end":27,"column_start":5,"column_end":52}}]},{"kind":"TupleVariant","id":{"krate":0,"index":243},"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/weierstrass/public_key.rs","byte_start":11536,"byte_end":11548,"line_start":31,"line_end":31,"column_start":5,"column_end":17},"name":"Uncompressed","qualname":"::weierstrass::public_key::PublicKey::Uncompressed","value":"PublicKey::Uncompressed(UncompressedCurvePoint<C>)","parent":{"krate":0,"index":238},"children":[],"decl_id":null,"docs":" Uncompressed Weierstrass elliptic curve point\n","sig":null,"attributes":[{"value":"/ Uncompressed Weierstrass elliptic curve point","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/weierstrass/public_key.rs","byte_start":11482,"byte_end":11531,"line_start":30,"line_end":30,"column_start":5,"column_end":54}}]},{"kind":"Enum","id":{"krate":0,"index":238},"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/weierstrass/public_key.rs","byte_start":11195,"byte_end":11204,"line_start":21,"line_end":21,"column_start":10,"column_end":19},"name":"PublicKey","qualname":"::weierstrass::public_key::PublicKey","value":"PublicKey::{Compressed, Uncompressed}","parent":null,"children":[{"krate":0,"index":240},{"krate":0,"index":243}],"decl_id":null,"docs":" Public keys for Weierstrass curves\n","sig":null,"attributes":[{"value":"/ Public keys for Weierstrass curves","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/weierstrass/public_key.rs","byte_start":11098,"byte_end":11136,"line_start":19,"line_end":19,"column_start":1,"column_end":39}}]},{"kind":"Method","id":{"krate":0,"index":142},"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/weierstrass/public_key.rs","byte_start":12108,"byte_end":12118,"line_start":47,"line_end":47,"column_start":12,"column_end":22},"name":"from_bytes","qualname":"<PublicKey<C>>::from_bytes","value":"fn <B> (bytes: B) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Decode public key from an elliptic curve point\n (compressed or uncompressed) encoded using the\n `Elliptic-Curve-Point-to-Octet-String` algorithm described in\n SEC 1: Elliptic Curve Cryptography (Version 2.0) section\n 2.3.3 (page 10).","sig":null,"attributes":[{"value":"/ Decode public key from an elliptic curve point","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/weierstrass/public_key.rs","byte_start":11781,"byte_end":11831,"line_start":40,"line_end":40,"column_start":5,"column_end":55}},{"value":"/ (compressed or uncompressed) encoded using the","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/weierstrass/public_key.rs","byte_start":11836,"byte_end":11886,"line_start":41,"line_end":41,"column_start":5,"column_end":55}},{"value":"/ `Elliptic-Curve-Point-to-Octet-String` algorithm described in","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/weierstrass/public_key.rs","byte_start":11891,"byte_end":11956,"line_start":42,"line_end":42,"column_start":5,"column_end":70}},{"value":"/ SEC 1: Elliptic Curve Cryptography (Version 2.0) section","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/weierstrass/public_key.rs","byte_start":11961,"byte_end":12021,"line_start":43,"line_end":43,"column_start":5,"column_end":65}},{"value":"/ 2.3.3 (page 10).","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/weierstrass/public_key.rs","byte_start":12026,"byte_end":12046,"line_start":44,"line_end":44,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/weierstrass/public_key.rs","byte_start":12051,"byte_end":12054,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ <http://www.secg.org/sec1-v2.pdf>","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/weierstrass/public_key.rs","byte_start":12059,"byte_end":12096,"line_start":46,"line_end":46,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":144},"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/weierstrass/public_key.rs","byte_start":13099,"byte_end":13120,"line_start":70,"line_end":70,"column_start":12,"column_end":33},"name":"from_compressed_point","qualname":"<PublicKey<C>>::from_compressed_point","value":"fn <B> (into_bytes: B) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Decode public key from an compressed elliptic curve point\n encoded using the `Elliptic-Curve-Point-to-Octet-String` algorithm\n described in SEC 1: Elliptic Curve Cryptography (Version 2.0) section\n 2.3.3 (page 10).","sig":null,"attributes":[{"value":"/ Decode public key from an compressed elliptic curve point","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/weierstrass/public_key.rs","byte_start":12798,"byte_end":12859,"line_start":64,"line_end":64,"column_start":5,"column_end":66}},{"value":"/ encoded using the `Elliptic-Curve-Point-to-Octet-String` algorithm","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/weierstrass/public_key.rs","byte_start":12864,"byte_end":12934,"line_start":65,"line_end":65,"column_start":5,"column_end":75}},{"value":"/ described in SEC 1: Elliptic Curve Cryptography (Version 2.0) section","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/weierstrass/public_key.rs","byte_start":12939,"byte_end":13012,"line_start":66,"line_end":66,"column_start":5,"column_end":78}},{"value":"/ 2.3.3 (page 10).","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/weierstrass/public_key.rs","byte_start":13017,"byte_end":13037,"line_start":67,"line_end":67,"column_start":5,"column_end":25}},{"value":"/","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/weierstrass/public_key.rs","byte_start":13042,"byte_end":13045,"line_start":68,"line_end":68,"column_start":5,"column_end":8}},{"value":"/ <http://www.secg.org/sec1-v2.pdf>","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/weierstrass/public_key.rs","byte_start":13050,"byte_end":13087,"line_start":69,"line_end":69,"column_start":5,"column_end":42}}]},{"kind":"Method","id":{"krate":0,"index":146},"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/weierstrass/public_key.rs","byte_start":13662,"byte_end":13681,"line_start":83,"line_end":83,"column_start":12,"column_end":31},"name":"from_untagged_point","qualname":"<PublicKey<C>>::from_untagged_point","value":"fn (bytes: &GenericArray<u8, UntaggedPointSize<C::ScalarSize>>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Decode public key from a raw uncompressed point serialized\n as a bytestring, without a `0x04`-byte tag.","sig":null,"attributes":[{"value":"/ Decode public key from a raw uncompressed point serialized","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/weierstrass/public_key.rs","byte_start":13333,"byte_end":13395,"line_start":77,"line_end":77,"column_start":5,"column_end":67}},{"value":"/ as a bytestring, without a `0x04`-byte tag.","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/weierstrass/public_key.rs","byte_start":13400,"byte_end":13447,"line_start":78,"line_end":78,"column_start":5,"column_end":52}},{"value":"/","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/weierstrass/public_key.rs","byte_start":13452,"byte_end":13455,"line_start":79,"line_end":79,"column_start":5,"column_end":8}},{"value":"/ This will be twice the modulus size, or 1-byte smaller than the","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/weierstrass/public_key.rs","byte_start":13460,"byte_end":13527,"line_start":80,"line_end":80,"column_start":5,"column_end":72}},{"value":"/ `Elliptic-Curve-Point-to-Octet-String` encoding i.e","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/weierstrass/public_key.rs","byte_start":13532,"byte_end":13587,"line_start":81,"line_end":81,"column_start":5,"column_end":60}},{"value":"/ with the leading `0x04` byte in that encoding removed.","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/weierstrass/public_key.rs","byte_start":13592,"byte_end":13650,"line_start":82,"line_end":82,"column_start":5,"column_end":63}}]},{"kind":"Method","id":{"krate":0,"index":147},"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/weierstrass/public_key.rs","byte_start":14176,"byte_end":14184,"line_start":96,"line_end":96,"column_start":12,"column_end":20},"name":"as_bytes","qualname":"<PublicKey<C>>::as_bytes","value":"fn (&self) -> &[u8]","parent":null,"children":[],"decl_id":null,"docs":" Obtain public key as a byte array reference\n","sig":null,"attributes":[{"value":"/ Obtain public key as a byte array reference","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/weierstrass/public_key.rs","byte_start":14103,"byte_end":14150,"line_start":94,"line_end":94,"column_start":5,"column_end":52}},{"value":"inline","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/weierstrass/public_key.rs","byte_start":14155,"byte_end":14164,"line_start":95,"line_end":95,"column_start":5,"column_end":14}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/error.rs","byte_start":1110,"byte_end":1115,"line_start":9,"line_end":9,"column_start":18,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":11}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/error.rs","byte_start":1277,"byte_end":1282,"line_start":16,"line_end":16,"column_start":28,"column_end":33},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/scalar.rs","byte_start":1584,"byte_end":1590,"line_start":12,"line_end":12,"column_start":12,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":24}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/scalar.rs","byte_start":1818,"byte_end":1824,"line_start":22,"line_end":22,"column_start":46,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":27}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/scalar.rs","byte_start":1962,"byte_end":1968,"line_start":31,"line_end":31,"column_start":22,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":30}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/scalar.rs","byte_start":2127,"byte_end":2133,"line_start":40,"line_end":40,"column_start":45,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":33}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/scalar.rs","byte_start":2310,"byte_end":2316,"line_start":50,"line_end":50,"column_start":24,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":36}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Inherent","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/secret_key.rs","byte_start":2984,"byte_end":2993,"line_start":22,"line_end":22,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":53},{"krate":0,"index":54},{"krate":0,"index":56},{"krate":0,"index":57}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/secret_key.rs","byte_start":3951,"byte_end":3960,"line_start":54,"line_end":54,"column_start":27,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":60}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/secret_key.rs","byte_start":4145,"byte_end":4154,"line_start":64,"line_end":64,"column_start":37,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":64},{"krate":0,"index":65}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Inherent","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/weierstrass/point.rs","byte_start":6961,"byte_end":6981,"line_start":38,"line_end":38,"column_start":16,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":95},{"krate":0,"index":97},{"krate":0,"index":98}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/weierstrass/point.rs","byte_start":7821,"byte_end":7841,"line_start":70,"line_end":70,"column_start":32,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":101}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/weierstrass/point.rs","byte_start":8017,"byte_end":8037,"line_start":80,"line_end":80,"column_start":25,"column_end":45},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/weierstrass/point.rs","byte_start":8212,"byte_end":8232,"line_start":87,"line_end":87,"column_start":26,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":106}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Inherent","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/weierstrass/point.rs","byte_start":8981,"byte_end":9003,"line_start":112,"line_end":112,"column_start":16,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":109},{"krate":0,"index":111},{"krate":0,"index":112}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/weierstrass/point.rs","byte_start":9835,"byte_end":9857,"line_start":144,"line_end":144,"column_start":32,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":115}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/weierstrass/point.rs","byte_start":10080,"byte_end":10102,"line_start":155,"line_end":155,"column_start":25,"column_end":47},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/weierstrass/point.rs","byte_start":10326,"byte_end":10348,"line_start":163,"line_end":163,"column_start":26,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":120}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Inherent","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/weierstrass/public_key.rs","byte_start":11595,"byte_end":11604,"line_start":34,"line_end":34,"column_start":16,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":142},{"krate":0,"index":144},{"krate":0,"index":146},{"krate":0,"index":147}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/weierstrass/public_key.rs","byte_start":14408,"byte_end":14417,"line_start":104,"line_end":104,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":150}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/weierstrass/public_key.rs","byte_start":14693,"byte_end":14702,"line_start":116,"line_end":116,"column_start":25,"column_end":34},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/weierstrass/public_key.rs","byte_start":15061,"byte_end":15070,"line_start":126,"line_end":126,"column_start":26,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":155}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/weierstrass/public_key.rs","byte_start":15436,"byte_end":15445,"line_start":137,"line_end":137,"column_start":50,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":158}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/weierstrass/public_key.rs","byte_start":15769,"byte_end":15778,"line_start":148,"line_end":148,"column_start":52,"column_end":61},"value":"","parent":null,"children":[{"krate":0,"index":161}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/lib.rs","byte_start":739,"byte_end":744,"line_start":25,"line_end":25,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":6}},{"kind":"Mod","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/lib.rs","byte_start":754,"byte_end":760,"line_start":26,"line_end":26,"column_start":9,"column_end":15},"ref_id":{"krate":0,"index":13}},{"kind":"Mod","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/lib.rs","byte_start":770,"byte_end":780,"line_start":27,"line_end":27,"column_start":9,"column_end":19},"ref_id":{"krate":0,"index":37}},{"kind":"Mod","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/lib.rs","byte_start":860,"byte_end":871,"line_start":31,"line_end":31,"column_start":9,"column_end":20},"ref_id":{"krate":0,"index":66}},{"kind":"Mod","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/weierstrass.rs","byte_start":4519,"byte_end":4524,"line_start":3,"line_end":3,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":67}},{"kind":"Mod","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/weierstrass.rs","byte_start":4534,"byte_end":4539,"line_start":4,"line_end":4,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":82}},{"kind":"Mod","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/weierstrass.rs","byte_start":4549,"byte_end":4559,"line_start":5,"line_end":5,"column_start":9,"column_end":19},"ref_id":{"krate":0,"index":121}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/error.rs","byte_start":1110,"byte_end":1115,"line_start":9,"line_end":9,"column_start":18,"column_end":23},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":175},"to":{"krate":1,"index":6074}},{"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/error.rs","byte_start":1277,"byte_end":1282,"line_start":16,"line_end":16,"column_start":28,"column_end":33},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":175},"to":{"krate":4,"index":1634}},{"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/scalar.rs","byte_start":1584,"byte_end":1590,"line_start":12,"line_end":12,"column_start":12,"column_end":18},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":18},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/scalar.rs","byte_start":1818,"byte_end":1824,"line_start":22,"line_end":22,"column_start":46,"column_end":52},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":18},"to":{"krate":1,"index":1816}},{"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/scalar.rs","byte_start":1962,"byte_end":1968,"line_start":31,"line_end":31,"column_start":22,"column_end":28},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":18},"to":{"krate":1,"index":1606}},{"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/scalar.rs","byte_start":2127,"byte_end":2133,"line_start":40,"line_end":40,"column_start":45,"column_end":51},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":18},"to":{"krate":1,"index":1825}},{"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/scalar.rs","byte_start":2310,"byte_end":2316,"line_start":50,"line_end":50,"column_start":24,"column_end":30},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":18},"to":{"krate":17,"index":9}},{"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/secret_key.rs","byte_start":2984,"byte_end":2993,"line_start":22,"line_end":22,"column_start":18,"column_end":27},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":48},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/secret_key.rs","byte_start":3951,"byte_end":3960,"line_start":54,"line_end":54,"column_start":27,"column_end":36},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":48},"to":{"krate":1,"index":2097}},{"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/secret_key.rs","byte_start":4145,"byte_end":4154,"line_start":64,"line_end":64,"column_start":37,"column_end":46},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":48},"to":{"krate":1,"index":1832}},{"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/weierstrass/curve.rs","byte_start":4972,"byte_end":4977,"line_start":10,"line_end":10,"column_start":18,"column_end":23},"kind":"SuperTrait","from":{"krate":1,"index":1606},"to":{"krate":0,"index":76}},{"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/weierstrass/curve.rs","byte_start":4980,"byte_end":4985,"line_start":10,"line_end":10,"column_start":26,"column_end":31},"kind":"SuperTrait","from":{"krate":1,"index":6069},"to":{"krate":0,"index":76}},{"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/weierstrass/curve.rs","byte_start":4988,"byte_end":4995,"line_start":10,"line_end":10,"column_start":34,"column_end":41},"kind":"SuperTrait","from":{"krate":1,"index":1895},"to":{"krate":0,"index":76}},{"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/weierstrass/curve.rs","byte_start":4998,"byte_end":5000,"line_start":10,"line_end":10,"column_start":44,"column_end":46},"kind":"SuperTrait","from":{"krate":1,"index":1639},"to":{"krate":0,"index":76}},{"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/weierstrass/curve.rs","byte_start":5003,"byte_end":5006,"line_start":10,"line_end":10,"column_start":49,"column_end":52},"kind":"SuperTrait","from":{"krate":1,"index":1660},"to":{"krate":0,"index":76}},{"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/weierstrass/curve.rs","byte_start":5009,"byte_end":5013,"line_start":10,"line_end":10,"column_start":55,"column_end":59},"kind":"SuperTrait","from":{"krate":1,"index":1904},"to":{"krate":0,"index":76}},{"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/weierstrass/curve.rs","byte_start":5016,"byte_end":5020,"line_start":10,"line_end":10,"column_start":62,"column_end":66},"kind":"SuperTrait","from":{"krate":1,"index":1916},"to":{"krate":0,"index":76}},{"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/weierstrass/point.rs","byte_start":6961,"byte_end":6981,"line_start":38,"line_end":38,"column_start":16,"column_end":36},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":182},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/weierstrass/point.rs","byte_start":7821,"byte_end":7841,"line_start":70,"line_end":70,"column_start":32,"column_end":52},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":182},"to":{"krate":1,"index":1816}},{"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/weierstrass/point.rs","byte_start":8017,"byte_end":8037,"line_start":80,"line_end":80,"column_start":25,"column_end":45},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":182},"to":{"krate":1,"index":1914}},{"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/weierstrass/point.rs","byte_start":8212,"byte_end":8232,"line_start":87,"line_end":87,"column_start":26,"column_end":46},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":182},"to":{"krate":1,"index":1606}},{"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/weierstrass/point.rs","byte_start":8981,"byte_end":9003,"line_start":112,"line_end":112,"column_start":16,"column_end":38},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":210},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/weierstrass/point.rs","byte_start":9835,"byte_end":9857,"line_start":144,"line_end":144,"column_start":32,"column_end":54},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":210},"to":{"krate":1,"index":1816}},{"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/weierstrass/point.rs","byte_start":10080,"byte_end":10102,"line_start":155,"line_end":155,"column_start":25,"column_end":47},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":210},"to":{"krate":1,"index":1914}},{"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/weierstrass/point.rs","byte_start":10326,"byte_end":10348,"line_start":163,"line_end":163,"column_start":26,"column_end":48},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":210},"to":{"krate":1,"index":1606}},{"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/weierstrass/public_key.rs","byte_start":11595,"byte_end":11604,"line_start":34,"line_end":34,"column_start":16,"column_end":25},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":238},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/weierstrass/public_key.rs","byte_start":14408,"byte_end":14417,"line_start":104,"line_end":104,"column_start":32,"column_end":41},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":238},"to":{"krate":1,"index":1816}},{"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/weierstrass/public_key.rs","byte_start":14693,"byte_end":14702,"line_start":116,"line_end":116,"column_start":25,"column_end":34},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":238},"to":{"krate":1,"index":1914}},{"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/weierstrass/public_key.rs","byte_start":15061,"byte_end":15070,"line_start":126,"line_end":126,"column_start":26,"column_end":35},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":238},"to":{"krate":1,"index":6069}},{"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/weierstrass/public_key.rs","byte_start":15436,"byte_end":15445,"line_start":137,"line_end":137,"column_start":50,"column_end":59},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":238},"to":{"krate":1,"index":1825}},{"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/elliptic-curve-0.4.0/src/weierstrass/public_key.rs","byte_start":15769,"byte_end":15778,"line_start":148,"line_end":148,"column_start":52,"column_end":61},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":238},"to":{"krate":1,"index":1825}}]}