{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2","program":"/home/rob/.rustup/toolchains/stable-x86_64-unknown-linux-gnu/bin/rls","arguments":["--crate-name","generic_array","/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","-C","metadata=4b988163389ae578","-C","extra-filename=-4b988163389ae578","--out-dir","/home/rob/Programming/Ergo/projects/sigma-rust/sigma-tree/target/rls/debug/deps","-L","dependency=/home/rob/Programming/Ergo/projects/sigma-rust/sigma-tree/target/rls/debug/deps","--extern","typenum=/home/rob/Programming/Ergo/projects/sigma-rust/sigma-tree/target/rls/debug/deps/libtypenum-2707f4e42e5538a1.rmeta","--cap-lints","allow","--cfg","relaxed_coherence","--error-format=json","--sysroot","/home/rob/.rustup/toolchains/stable-x86_64-unknown-linux-gnu"],"output":"/home/rob/Programming/Ergo/projects/sigma-rust/sigma-tree/target/rls/debug/deps/libgeneric_array-4b988163389ae578.rmeta"},"prelude":{"crate_id":{"name":"generic_array","disambiguator":[9810382803070846902,2558830235434100492]},"crate_root":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src","external_crates":[{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","num":1,"id":{"name":"core","disambiguator":[16221439354469382097,15565837348772828253]}},{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","num":2,"id":{"name":"compiler_builtins","disambiguator":[15613252303691562375,4556165055238676072]}},{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","num":3,"id":{"name":"rustc_std_workspace_core","disambiguator":[12269617896898487533,65142111397584226]}},{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","num":4,"id":{"name":"typenum","disambiguator":[12063132472242547677,13370633828427008234]}}],"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","byte_start":0,"byte_end":17642,"line_start":1,"line_end":664,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":196},"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","byte_start":2253,"byte_end":2269,"line_start":101,"line_end":101,"column_start":21,"column_end":37},"alias_span":null,"name":"GenericArrayIter","value":"","parent":{"krate":0,"index":0}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","byte_start":0,"byte_end":17642,"line_start":1,"line_end":664,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","parent":null,"children":[{"krate":0,"index":1},{"krate":0,"index":2},{"krate":0,"index":3},{"krate":0,"index":4},{"krate":0,"index":5},{"krate":0,"index":31},{"krate":0,"index":100},{"krate":0,"index":101},{"krate":0,"index":102},{"krate":0,"index":105},{"krate":0,"index":108},{"krate":0,"index":112},{"krate":0,"index":115},{"krate":0,"index":119},{"krate":0,"index":139},{"krate":0,"index":184},{"krate":0,"index":253},{"krate":0,"index":360},{"krate":0,"index":361},{"krate":0,"index":362},{"krate":0,"index":363},{"krate":0,"index":366},{"krate":0,"index":369},{"krate":0,"index":375},{"krate":0,"index":379},{"krate":0,"index":382},{"krate":0,"index":388},{"krate":0,"index":392},{"krate":0,"index":395},{"krate":0,"index":399},{"krate":0,"index":403},{"krate":0,"index":407},{"krate":0,"index":410},{"krate":0,"index":413},{"krate":0,"index":418},{"krate":0,"index":422},{"krate":0,"index":427},{"krate":0,"index":433},{"krate":0,"index":437},{"krate":0,"index":442},{"krate":0,"index":447},{"krate":0,"index":451},{"krate":0,"index":458},{"krate":0,"index":465},{"krate":0,"index":471},{"krate":0,"index":472},{"krate":0,"index":491},{"krate":0,"index":496},{"krate":0,"index":512},{"krate":0,"index":519},{"krate":0,"index":524},{"krate":0,"index":529},{"krate":0,"index":533},{"krate":0,"index":539}],"decl_id":null,"docs":" This crate implements a structure that can be used as a generic array type.\n Core Rust array types `[T; N]` can't be used generically with\n respect to `N`, so for example this:","sig":null,"attributes":[{"value":"! This crate implements a structure that can be used as a generic array type.","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","byte_start":0,"byte_end":79,"line_start":1,"line_end":1,"column_start":1,"column_end":80}},{"value":"! Core Rust array types `[T; N]` can't be used generically with","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","byte_start":80,"byte_end":145,"line_start":2,"line_end":2,"column_start":1,"column_end":66}},{"value":"! respect to `N`, so for example this:","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","byte_start":146,"byte_end":186,"line_start":3,"line_end":3,"column_start":1,"column_end":41}},{"value":"!","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","byte_start":187,"byte_end":190,"line_start":4,"line_end":4,"column_start":1,"column_end":4}},{"value":"! ```rust{compile_fail}","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","byte_start":191,"byte_end":216,"line_start":5,"line_end":5,"column_start":1,"column_end":26}},{"value":"! struct Foo<T, N> {","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","byte_start":217,"byte_end":239,"line_start":6,"line_end":6,"column_start":1,"column_end":23}},{"value":"!     data: [T; N]","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","byte_start":240,"byte_end":260,"line_start":7,"line_end":7,"column_start":1,"column_end":21}},{"value":"! }","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","byte_start":261,"byte_end":266,"line_start":8,"line_end":8,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","byte_start":267,"byte_end":274,"line_start":9,"line_end":9,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","byte_start":275,"byte_end":278,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"! won't work.","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","byte_start":279,"byte_end":294,"line_start":11,"line_end":11,"column_start":1,"column_end":16}},{"value":"!","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","byte_start":295,"byte_end":298,"line_start":12,"line_end":12,"column_start":1,"column_end":4}},{"value":"! **generic-array** exports a `GenericArray<T,N>` type, which lets","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","byte_start":299,"byte_end":367,"line_start":13,"line_end":13,"column_start":1,"column_end":69}},{"value":"! the above be implemented as:","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","byte_start":368,"byte_end":400,"line_start":14,"line_end":14,"column_start":1,"column_end":33}},{"value":"!","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","byte_start":401,"byte_end":404,"line_start":15,"line_end":15,"column_start":1,"column_end":4}},{"value":"! ```rust","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","byte_start":405,"byte_end":416,"line_start":16,"line_end":16,"column_start":1,"column_end":12}},{"value":"! use generic_array::{ArrayLength, GenericArray};","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","byte_start":417,"byte_end":468,"line_start":17,"line_end":17,"column_start":1,"column_end":52}},{"value":"!","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","byte_start":469,"byte_end":472,"line_start":18,"line_end":18,"column_start":1,"column_end":4}},{"value":"! struct Foo<T, N: ArrayLength<T>> {","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","byte_start":473,"byte_end":511,"line_start":19,"line_end":19,"column_start":1,"column_end":39}},{"value":"!     data: GenericArray<T,N>","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","byte_start":512,"byte_end":543,"line_start":20,"line_end":20,"column_start":1,"column_end":32}},{"value":"! }","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","byte_start":544,"byte_end":549,"line_start":21,"line_end":21,"column_start":1,"column_end":6}},{"value":"! ```","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","byte_start":550,"byte_end":557,"line_start":22,"line_end":22,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","byte_start":558,"byte_end":561,"line_start":23,"line_end":23,"column_start":1,"column_end":4}},{"value":"! The `ArrayLength<T>` trait is implemented by default for","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","byte_start":562,"byte_end":622,"line_start":24,"line_end":24,"column_start":1,"column_end":61}},{"value":"! [unsigned integer types](../typenum/uint/index.html) from","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","byte_start":623,"byte_end":684,"line_start":25,"line_end":25,"column_start":1,"column_end":62}},{"value":"! [typenum](../typenum/index.html):","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","byte_start":685,"byte_end":722,"line_start":26,"line_end":26,"column_start":1,"column_end":38}},{"value":"!","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","byte_start":723,"byte_end":726,"line_start":27,"line_end":27,"column_start":1,"column_end":4}},{"value":"! ```rust","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","byte_start":727,"byte_end":738,"line_start":28,"line_end":28,"column_start":1,"column_end":12}},{"value":"! # use generic_array::{ArrayLength, GenericArray};","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","byte_start":739,"byte_end":792,"line_start":29,"line_end":29,"column_start":1,"column_end":54}},{"value":"! use generic_array::typenum::U5;","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","byte_start":793,"byte_end":828,"line_start":30,"line_end":30,"column_start":1,"column_end":36}},{"value":"!","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","byte_start":829,"byte_end":832,"line_start":31,"line_end":31,"column_start":1,"column_end":4}},{"value":"! struct Foo<N: ArrayLength<i32>> {","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","byte_start":833,"byte_end":870,"line_start":32,"line_end":32,"column_start":1,"column_end":38}},{"value":"!     data: GenericArray<i32, N>","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","byte_start":871,"byte_end":905,"line_start":33,"line_end":33,"column_start":1,"column_end":35}},{"value":"! }","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","byte_start":906,"byte_end":911,"line_start":34,"line_end":34,"column_start":1,"column_end":6}},{"value":"!","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","byte_start":912,"byte_end":915,"line_start":35,"line_end":35,"column_start":1,"column_end":4}},{"value":"! # fn main() {","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","byte_start":916,"byte_end":933,"line_start":36,"line_end":36,"column_start":1,"column_end":18}},{"value":"! let foo = Foo::<U5>{data: GenericArray::default()};","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","byte_start":934,"byte_end":989,"line_start":37,"line_end":37,"column_start":1,"column_end":56}},{"value":"! # }","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","byte_start":990,"byte_end":997,"line_start":38,"line_end":38,"column_start":1,"column_end":8}},{"value":"! ```","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","byte_start":998,"byte_end":1005,"line_start":39,"line_end":39,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","byte_start":1006,"byte_end":1009,"line_start":40,"line_end":40,"column_start":1,"column_end":4}},{"value":"! For example, `GenericArray<T, U5>` would work almost like `[T; 5]`:","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","byte_start":1010,"byte_end":1081,"line_start":41,"line_end":41,"column_start":1,"column_end":72}},{"value":"!","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","byte_start":1082,"byte_end":1085,"line_start":42,"line_end":42,"column_start":1,"column_end":4}},{"value":"! ```rust","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","byte_start":1086,"byte_end":1097,"line_start":43,"line_end":43,"column_start":1,"column_end":12}},{"value":"! # use generic_array::{ArrayLength, GenericArray};","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","byte_start":1098,"byte_end":1151,"line_start":44,"line_end":44,"column_start":1,"column_end":54}},{"value":"! use generic_array::typenum::U5;","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","byte_start":1152,"byte_end":1187,"line_start":45,"line_end":45,"column_start":1,"column_end":36}},{"value":"!","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","byte_start":1188,"byte_end":1191,"line_start":46,"line_end":46,"column_start":1,"column_end":4}},{"value":"! struct Foo<T, N: ArrayLength<T>> {","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","byte_start":1192,"byte_end":1230,"line_start":47,"line_end":47,"column_start":1,"column_end":39}},{"value":"!     data: GenericArray<T, N>","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","byte_start":1231,"byte_end":1263,"line_start":48,"line_end":48,"column_start":1,"column_end":33}},{"value":"! }","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","byte_start":1264,"byte_end":1269,"line_start":49,"line_end":49,"column_start":1,"column_end":6}},{"value":"!","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","byte_start":1270,"byte_end":1273,"line_start":50,"line_end":50,"column_start":1,"column_end":4}},{"value":"! # fn main() {","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","byte_start":1274,"byte_end":1291,"line_start":51,"line_end":51,"column_start":1,"column_end":18}},{"value":"! let foo = Foo::<i32, U5>{data: GenericArray::default()};","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","byte_start":1292,"byte_end":1352,"line_start":52,"line_end":52,"column_start":1,"column_end":61}},{"value":"! # }","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","byte_start":1353,"byte_end":1360,"line_start":53,"line_end":53,"column_start":1,"column_end":8}},{"value":"! ```","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","byte_start":1361,"byte_end":1368,"line_start":54,"line_end":54,"column_start":1,"column_end":8}},{"value":"!","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","byte_start":1369,"byte_end":1372,"line_start":55,"line_end":55,"column_start":1,"column_end":4}},{"value":"! For ease of use, an `arr!` macro is provided - example below:","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","byte_start":1373,"byte_end":1438,"line_start":56,"line_end":56,"column_start":1,"column_end":66}},{"value":"!","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","byte_start":1439,"byte_end":1442,"line_start":57,"line_end":57,"column_start":1,"column_end":4}},{"value":"! ```","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","byte_start":1443,"byte_end":1450,"line_start":58,"line_end":58,"column_start":1,"column_end":8}},{"value":"! # #[macro_use]","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","byte_start":1451,"byte_end":1469,"line_start":59,"line_end":59,"column_start":1,"column_end":19}},{"value":"! # extern crate generic_array;","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","byte_start":1470,"byte_end":1503,"line_start":60,"line_end":60,"column_start":1,"column_end":34}},{"value":"! # extern crate typenum;","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","byte_start":1504,"byte_end":1531,"line_start":61,"line_end":61,"column_start":1,"column_end":28}},{"value":"! # fn main() {","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","byte_start":1532,"byte_end":1549,"line_start":62,"line_end":62,"column_start":1,"column_end":18}},{"value":"! let array = arr![u32; 1, 2, 3];","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","byte_start":1550,"byte_end":1585,"line_start":63,"line_end":63,"column_start":1,"column_end":36}},{"value":"! assert_eq!(array[2], 3);","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","byte_start":1586,"byte_end":1614,"line_start":64,"line_end":64,"column_start":1,"column_end":29}},{"value":"! # }","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","byte_start":1615,"byte_end":1622,"line_start":65,"line_end":65,"column_start":1,"column_end":8}},{"value":"! ```","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","byte_start":1623,"byte_end":1630,"line_start":66,"line_end":66,"column_start":1,"column_end":8}},{"value":"deny(missing_docs)","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","byte_start":1632,"byte_end":1654,"line_start":68,"line_end":68,"column_start":1,"column_end":23}},{"value":"deny(meta_variable_misuse)","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","byte_start":1655,"byte_end":1685,"line_start":69,"line_end":69,"column_start":1,"column_end":31}},{"value":"no_std","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","byte_start":1686,"byte_end":1696,"line_start":70,"line_end":70,"column_start":1,"column_end":11}}]},{"kind":"Mod","id":{"krate":0,"index":119},"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/arr.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"arr","qualname":"::arr","value":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/arr.rs","parent":null,"children":[{"krate":0,"index":120},{"krate":0,"index":121},{"krate":0,"index":122},{"krate":0,"index":123},{"krate":0,"index":127},{"krate":0,"index":132},{"krate":0,"index":135},{"krate":0,"index":136},{"krate":0,"index":137}],"decl_id":null,"docs":" Implementation for `arr!` macro.\n","sig":null,"attributes":[{"value":"! Implementation for `arr!` macro.","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/arr.rs","byte_start":28084,"byte_end":28120,"line_start":1,"line_end":1,"column_start":1,"column_end":37}}]},{"kind":"Trait","id":{"krate":0,"index":123},"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/arr.rs","byte_start":28228,"byte_end":28237,"line_start":8,"line_end":8,"column_start":11,"column_end":20},"name":"AddLength","qualname":"::arr::AddLength","value":"AddLength<T, N: ArrayLength<T>>: ArrayLength<T>","parent":null,"children":[{"krate":0,"index":126}],"decl_id":null,"docs":" Helper trait for `arr!` macro\n","sig":null,"attributes":[{"value":"/ Helper trait for `arr!` macro","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/arr.rs","byte_start":28184,"byte_end":28217,"line_start":7,"line_end":7,"column_start":1,"column_end":34}}]},{"kind":"Type","id":{"krate":0,"index":126},"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/arr.rs","byte_start":28312,"byte_end":28318,"line_start":10,"line_end":10,"column_start":10,"column_end":16},"name":"Output","qualname":"::arr::AddLength::Output","value":"type Output: ArrayLength<T>;","parent":{"krate":0,"index":123},"children":[],"decl_id":null,"docs":" Resulting length\n","sig":null,"attributes":[{"value":"/ Resulting length","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/arr.rs","byte_start":28282,"byte_end":28302,"line_start":9,"line_end":9,"column_start":5,"column_end":25}}]},{"kind":"Type","id":{"krate":0,"index":132},"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/arr.rs","byte_start":28578,"byte_end":28581,"line_start":23,"line_end":23,"column_start":10,"column_end":13},"name":"Inc","qualname":"::arr::Inc","value":"<U as AddLength<T, U1>>::Output","parent":null,"children":[],"decl_id":null,"docs":" Helper type for `arr!` macro\n","sig":null,"attributes":[{"value":"/ Helper type for `arr!` macro","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/arr.rs","byte_start":28536,"byte_end":28568,"line_start":22,"line_end":22,"column_start":1,"column_end":33}}]},{"kind":"Mod","id":{"krate":0,"index":139},"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/functional.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"functional","qualname":"::functional","value":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/functional.rs","parent":null,"children":[{"krate":0,"index":140},{"krate":0,"index":141},{"krate":0,"index":142},{"krate":0,"index":143},{"krate":0,"index":147},{"krate":0,"index":153},{"krate":0,"index":159},{"krate":0,"index":163},{"krate":0,"index":176},{"krate":0,"index":180}],"decl_id":null,"docs":" Functional programming with generic sequences","sig":null,"attributes":[{"value":"! Functional programming with generic sequences","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/functional.rs","byte_start":31725,"byte_end":31774,"line_start":1,"line_end":1,"column_start":1,"column_end":50}},{"value":"!","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/functional.rs","byte_start":31775,"byte_end":31778,"line_start":2,"line_end":2,"column_start":1,"column_end":4}},{"value":"! Please see `tests/generics.rs` for examples of how to best use these in your generic functions.","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/functional.rs","byte_start":31779,"byte_end":31878,"line_start":3,"line_end":3,"column_start":1,"column_end":100}}]},{"kind":"Trait","id":{"krate":0,"index":143},"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/functional.rs","byte_start":32092,"byte_end":32113,"line_start":12,"line_end":12,"column_start":18,"column_end":39},"name":"MappedGenericSequence","qualname":"::functional::MappedGenericSequence","value":"MappedGenericSequence<T, U>: GenericSequence<T>","parent":null,"children":[{"krate":0,"index":146}],"decl_id":null,"docs":" Defines the relationship between one generic sequence and another,\n for operations such as `map` and `zip`.\n","sig":null,"attributes":[{"value":"/ Defines the relationship between one generic sequence and another,","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/functional.rs","byte_start":31960,"byte_end":32030,"line_start":10,"line_end":10,"column_start":1,"column_end":71}},{"value":"/ for operations such as `map` and `zip`.","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/functional.rs","byte_start":32031,"byte_end":32074,"line_start":11,"line_end":11,"column_start":1,"column_end":44}}]},{"kind":"Type","id":{"krate":0,"index":146},"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/functional.rs","byte_start":32220,"byte_end":32226,"line_start":17,"line_end":17,"column_start":10,"column_end":16},"name":"Mapped","qualname":"::functional::MappedGenericSequence::Mapped","value":"type Mapped: GenericSequence<U, Length = Self::Length>;","parent":{"krate":0,"index":143},"children":[],"decl_id":null,"docs":" Mapped sequence type\n","sig":null,"attributes":[{"value":"/ Mapped sequence type","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/functional.rs","byte_start":32186,"byte_end":32210,"line_start":16,"line_end":16,"column_start":5,"column_end":29}}]},{"kind":"Type","id":{"krate":0,"index":159},"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/functional.rs","byte_start":32995,"byte_end":33009,"line_start":39,"line_end":39,"column_start":10,"column_end":24},"name":"MappedSequence","qualname":"::functional::MappedSequence","value":"<<S as MappedGenericSequence<T, U>>::Mapped as GenericSequence<U>>::Sequence","parent":null,"children":[],"decl_id":null,"docs":" Accessor type for a mapped generic sequence\n","sig":null,"attributes":[{"value":"/ Accessor type for a mapped generic sequence","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/functional.rs","byte_start":32938,"byte_end":32985,"line_start":38,"line_end":38,"column_start":1,"column_end":48}}]},{"kind":"Trait","id":{"krate":0,"index":163},"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/functional.rs","byte_start":33186,"byte_end":33204,"line_start":43,"line_end":43,"column_start":18,"column_end":36},"name":"FunctionalSequence","qualname":"::functional::FunctionalSequence","value":"FunctionalSequence<T>: GenericSequence<T>","parent":null,"children":[{"krate":0,"index":165},{"krate":0,"index":168},{"krate":0,"index":173}],"decl_id":null,"docs":" Defines functional programming methods for generic sequences\n","sig":null,"attributes":[{"value":"/ Defines functional programming methods for generic sequences","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/functional.rs","byte_start":33104,"byte_end":33168,"line_start":42,"line_end":42,"column_start":1,"column_end":65}}]},{"kind":"Method","id":{"krate":0,"index":165},"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/functional.rs","byte_start":33495,"byte_end":33498,"line_start":48,"line_end":48,"column_start":8,"column_end":11},"name":"map","qualname":"::functional::FunctionalSequence::map","value":"fn <U, F> (self, f: F) -> MappedSequence<Self, T, U>","parent":{"krate":0,"index":163},"children":[],"decl_id":null,"docs":" Maps a `GenericSequence` to another `GenericSequence`.","sig":null,"attributes":[{"value":"/ Maps a `GenericSequence` to another `GenericSequence`.","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/functional.rs","byte_start":33234,"byte_end":33292,"line_start":44,"line_end":44,"column_start":5,"column_end":63}},{"value":"/","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/functional.rs","byte_start":33297,"byte_end":33300,"line_start":45,"line_end":45,"column_start":5,"column_end":8}},{"value":"/ If the mapping function panics, any already initialized elements in the new sequence","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/functional.rs","byte_start":33305,"byte_end":33393,"line_start":46,"line_end":46,"column_start":5,"column_end":93}},{"value":"/ will be dropped, AND any unused elements in the source sequence will also be dropped.","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/functional.rs","byte_start":33398,"byte_end":33487,"line_start":47,"line_end":47,"column_start":5,"column_end":94}}]},{"kind":"Method","id":{"krate":0,"index":168},"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/functional.rs","byte_start":34137,"byte_end":34140,"line_start":63,"line_end":63,"column_start":8,"column_end":11},"name":"zip","qualname":"::functional::FunctionalSequence::zip","value":"fn <B, Rhs, U, F> (self, rhs: Rhs, f: F) -> MappedSequence<Self, T, U>","parent":{"krate":0,"index":163},"children":[],"decl_id":null,"docs":" Combines two `GenericSequence` instances and iterates through both of them,\n initializing a new `GenericSequence` with the result of the zipped mapping function.","sig":null,"attributes":[{"value":"/ Combines two `GenericSequence` instances and iterates through both of them,","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/functional.rs","byte_start":33747,"byte_end":33826,"line_start":57,"line_end":57,"column_start":5,"column_end":84}},{"value":"/ initializing a new `GenericSequence` with the result of the zipped mapping function.","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/functional.rs","byte_start":33831,"byte_end":33919,"line_start":58,"line_end":58,"column_start":5,"column_end":93}},{"value":"/","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/functional.rs","byte_start":33924,"byte_end":33927,"line_start":59,"line_end":59,"column_start":5,"column_end":8}},{"value":"/ If the mapping function panics, any already initialized elements in the new sequence","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/functional.rs","byte_start":33932,"byte_end":34020,"line_start":60,"line_end":60,"column_start":5,"column_end":93}},{"value":"/ will be dropped, AND any unused elements in the source sequences will also be dropped.","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/functional.rs","byte_start":34025,"byte_end":34115,"line_start":61,"line_end":61,"column_start":5,"column_end":95}},{"value":"inline","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/functional.rs","byte_start":34120,"byte_end":34129,"line_start":62,"line_end":62,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":173},"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/functional.rs","byte_start":34700,"byte_end":34704,"line_start":77,"line_end":77,"column_start":8,"column_end":12},"name":"fold","qualname":"::functional::FunctionalSequence::fold","value":"fn <U, F> (self, init: U, f: F) -> U","parent":{"krate":0,"index":163},"children":[],"decl_id":null,"docs":" Folds (or reduces) a sequence of data into a single value.","sig":null,"attributes":[{"value":"/ Folds (or reduces) a sequence of data into a single value.","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/functional.rs","byte_start":34548,"byte_end":34610,"line_start":74,"line_end":74,"column_start":5,"column_end":67}},{"value":"/","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/functional.rs","byte_start":34615,"byte_end":34618,"line_start":75,"line_end":75,"column_start":5,"column_end":8}},{"value":"/ If the fold function panics, any unused elements will be dropped.","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/functional.rs","byte_start":34623,"byte_end":34692,"line_start":76,"line_end":76,"column_start":5,"column_end":74}}]},{"kind":"Mod","id":{"krate":0,"index":184},"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/iter.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"iter","qualname":"::iter","value":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/iter.rs","parent":null,"children":[{"krate":0,"index":185},{"krate":0,"index":188},{"krate":0,"index":189},{"krate":0,"index":192},{"krate":0,"index":196},{"krate":0,"index":202},{"krate":0,"index":207},{"krate":0,"index":213},{"krate":0,"index":217},{"krate":0,"index":221},{"krate":0,"index":225},{"krate":0,"index":238},{"krate":0,"index":246},{"krate":0,"index":250}],"decl_id":null,"docs":" `GenericArray` iterator implementation.\n","sig":null,"attributes":[{"value":"! `GenericArray` iterator implementation.","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/iter.rs","byte_start":35174,"byte_end":35217,"line_start":1,"line_end":1,"column_start":1,"column_end":44}}]},{"kind":"Struct","id":{"krate":0,"index":196},"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/iter.rs","byte_start":35424,"byte_end":35440,"line_start":9,"line_end":9,"column_start":12,"column_end":28},"name":"GenericArrayIter","qualname":"::iter::GenericArrayIter","value":"GenericArrayIter {  }","parent":null,"children":[{"krate":0,"index":199},{"krate":0,"index":200},{"krate":0,"index":201}],"decl_id":null,"docs":" An iterator that moves out of a `GenericArray`\n","sig":null,"attributes":[{"value":"/ An iterator that moves out of a `GenericArray`","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/iter.rs","byte_start":35362,"byte_end":35412,"line_start":8,"line_end":8,"column_start":1,"column_end":51}}]},{"kind":"Method","id":{"krate":0,"index":205},"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/iter.rs","byte_start":36098,"byte_end":36106,"line_start":36,"line_end":36,"column_start":12,"column_end":20},"name":"as_slice","qualname":"<GenericArrayIter<T, N>>::as_slice","value":"fn (&self) -> &[T]","parent":null,"children":[],"decl_id":null,"docs":" Returns the remaining items of this iterator as a slice\n","sig":null,"attributes":[{"value":"/ Returns the remaining items of this iterator as a slice","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/iter.rs","byte_start":36013,"byte_end":36072,"line_start":34,"line_end":34,"column_start":5,"column_end":64}},{"value":"inline","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/iter.rs","byte_start":36077,"byte_end":36086,"line_start":35,"line_end":35,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":206},"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/iter.rs","byte_start":36288,"byte_end":36300,"line_start":42,"line_end":42,"column_start":12,"column_end":24},"name":"as_mut_slice","qualname":"<GenericArrayIter<T, N>>::as_mut_slice","value":"fn (&mut self) -> &mut [T]","parent":null,"children":[],"decl_id":null,"docs":" Returns the remaining items of this iterator as a mutable slice\n","sig":null,"attributes":[{"value":"/ Returns the remaining items of this iterator as a mutable slice","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/iter.rs","byte_start":36195,"byte_end":36262,"line_start":40,"line_end":40,"column_start":5,"column_end":72}},{"value":"inline","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/iter.rs","byte_start":36267,"byte_end":36276,"line_start":41,"line_end":41,"column_start":5,"column_end":14}}]},{"kind":"Mod","id":{"krate":0,"index":253},"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/sequence.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"sequence","qualname":"::sequence","value":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/sequence.rs","parent":null,"children":[{"krate":0,"index":254},{"krate":0,"index":255},{"krate":0,"index":258},{"krate":0,"index":259},{"krate":0,"index":260},{"krate":0,"index":261},{"krate":0,"index":278},{"krate":0,"index":280},{"krate":0,"index":288},{"krate":0,"index":296},{"krate":0,"index":301},{"krate":0,"index":306},{"krate":0,"index":312},{"krate":0,"index":318},{"krate":0,"index":324},{"krate":0,"index":331},{"krate":0,"index":339},{"krate":0,"index":347},{"krate":0,"index":353}],"decl_id":null,"docs":" Useful traits for manipulating sequences of data stored in `GenericArray`s\n","sig":null,"attributes":[{"value":"! Useful traits for manipulating sequences of data stored in `GenericArray`s","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/sequence.rs","byte_start":41333,"byte_end":41411,"line_start":1,"line_end":1,"column_start":1,"column_end":79}}]},{"kind":"Trait","id":{"krate":0,"index":261},"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/sequence.rs","byte_start":41701,"byte_end":41716,"line_start":12,"line_end":12,"column_start":18,"column_end":33},"name":"GenericSequence","qualname":"::sequence::GenericSequence","value":"GenericSequence<T>: Sized + IntoIterator","parent":null,"children":[{"krate":0,"index":263},{"krate":0,"index":264},{"krate":0,"index":265},{"krate":0,"index":267},{"krate":0,"index":272}],"decl_id":null,"docs":" Defines some sequence with an associated length and iteration capabilities.","sig":null,"attributes":[{"value":"/ Defines some sequence with an associated length and iteration capabilities.","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/sequence.rs","byte_start":41532,"byte_end":41611,"line_start":9,"line_end":9,"column_start":1,"column_end":80}},{"value":"/","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/sequence.rs","byte_start":41612,"byte_end":41615,"line_start":10,"line_end":10,"column_start":1,"column_end":4}},{"value":"/ This is useful for passing N-length generic arrays as generics.","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/sequence.rs","byte_start":41616,"byte_end":41683,"line_start":11,"line_end":11,"column_start":1,"column_end":68}}]},{"kind":"Type","id":{"krate":0,"index":263},"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/sequence.rs","byte_start":41794,"byte_end":41800,"line_start":14,"line_end":14,"column_start":10,"column_end":16},"name":"Length","qualname":"::sequence::GenericSequence::Length","value":"type Length: ArrayLength<T>;","parent":{"krate":0,"index":261},"children":[],"decl_id":null,"docs":" `GenericArray` associated length\n","sig":null,"attributes":[{"value":"/ `GenericArray` associated length","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/sequence.rs","byte_start":41748,"byte_end":41784,"line_start":13,"line_end":13,"column_start":5,"column_end":41}}]},{"kind":"Type","id":{"krate":0,"index":264},"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/sequence.rs","byte_start":41930,"byte_end":41938,"line_start":17,"line_end":17,"column_start":10,"column_end":18},"name":"Sequence","qualname":"::sequence::GenericSequence::Sequence","value":"type Sequence: GenericSequence<T, Length = Self::Length> + FromIterator<T>;","parent":{"krate":0,"index":261},"children":[],"decl_id":null,"docs":" Concrete sequence type used in conjuction with reference implementations of `GenericSequence`\n","sig":null,"attributes":[{"value":"/ Concrete sequence type used in conjuction with reference implementations of `GenericSequence`","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/sequence.rs","byte_start":41823,"byte_end":41920,"line_start":16,"line_end":16,"column_start":5,"column_end":102}}]},{"kind":"Method","id":{"krate":0,"index":265},"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/sequence.rs","byte_start":42219,"byte_end":42227,"line_start":23,"line_end":23,"column_start":8,"column_end":16},"name":"generate","qualname":"::sequence::GenericSequence::generate","value":"fn <F> (f: F) -> Self::Sequence","parent":{"krate":0,"index":261},"children":[],"decl_id":null,"docs":" Initializes a new sequence instance using the given function.","sig":null,"attributes":[{"value":"/ Initializes a new sequence instance using the given function.","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/sequence.rs","byte_start":42006,"byte_end":42071,"line_start":19,"line_end":19,"column_start":5,"column_end":70}},{"value":"/","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/sequence.rs","byte_start":42076,"byte_end":42079,"line_start":20,"line_end":20,"column_start":5,"column_end":8}},{"value":"/ If the generator function panics while initializing the sequence,","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/sequence.rs","byte_start":42084,"byte_end":42153,"line_start":21,"line_end":21,"column_start":5,"column_end":74}},{"value":"/ any already initialized elements will be dropped.","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/sequence.rs","byte_start":42158,"byte_end":42211,"line_start":22,"line_end":22,"column_start":5,"column_end":58}}]},{"kind":"Method","id":{"krate":0,"index":267},"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/sequence.rs","byte_start":42322,"byte_end":42334,"line_start":28,"line_end":28,"column_start":8,"column_end":20},"name":"inverted_zip","qualname":"::sequence::GenericSequence::inverted_zip","value":"fn <B, U, F> (self, lhs: GenericArray<B, Self::Length>, mut f: F) -> MappedSequence<GenericArray<B, Self::Length>, B, U>","parent":{"krate":0,"index":261},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":272},"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/sequence.rs","byte_start":43248,"byte_end":43261,"line_start":58,"line_end":58,"column_start":8,"column_end":21},"name":"inverted_zip2","qualname":"::sequence::GenericSequence::inverted_zip2","value":"fn <B, Lhs, U, F> (self, lhs: Lhs, mut f: F) -> MappedSequence<Lhs, B, U>","parent":{"krate":0,"index":261},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":278},"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/sequence.rs","byte_start":43916,"byte_end":43928,"line_start":73,"line_end":73,"column_start":10,"column_end":22},"name":"SequenceItem","qualname":"::sequence::SequenceItem","value":"<T as IntoIterator>::Item","parent":null,"children":[],"decl_id":null,"docs":" Accessor for `GenericSequence` item type, which is really `IntoIterator::Item`","sig":null,"attributes":[{"value":"/ Accessor for `GenericSequence` item type, which is really `IntoIterator::Item`","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/sequence.rs","byte_start":43679,"byte_end":43761,"line_start":69,"line_end":69,"column_start":1,"column_end":83}},{"value":"/","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/sequence.rs","byte_start":43762,"byte_end":43765,"line_start":70,"line_end":70,"column_start":1,"column_end":4}},{"value":"/ For deeply nested generic mapped sequence types, like shown in `tests/generics.rs`,","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/sequence.rs","byte_start":43766,"byte_end":43853,"line_start":71,"line_end":71,"column_start":1,"column_end":88}},{"value":"/ this can be useful for keeping things organized.","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/sequence.rs","byte_start":43854,"byte_end":43906,"line_start":72,"line_end":72,"column_start":1,"column_end":53}}]},{"kind":"Trait","id":{"krate":0,"index":296},"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/sequence.rs","byte_start":44820,"byte_end":44828,"line_start":111,"line_end":111,"column_start":18,"column_end":26},"name":"Lengthen","qualname":"::sequence::Lengthen","value":"Lengthen<T>: Sized + GenericSequence<T>","parent":null,"children":[{"krate":0,"index":298},{"krate":0,"index":299},{"krate":0,"index":300}],"decl_id":null,"docs":" Defines any `GenericSequence` which can be lengthened or extended by appending\n or prepending an element to it.","sig":null,"attributes":[{"value":"/ Defines any `GenericSequence` which can be lengthened or extended by appending","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/sequence.rs","byte_start":44582,"byte_end":44664,"line_start":107,"line_end":107,"column_start":1,"column_end":83}},{"value":"/ or prepending an element to it.","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/sequence.rs","byte_start":44665,"byte_end":44700,"line_start":108,"line_end":108,"column_start":1,"column_end":36}},{"value":"/","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/sequence.rs","byte_start":44701,"byte_end":44704,"line_start":109,"line_end":109,"column_start":1,"column_end":4}},{"value":"/ Any lengthened sequence can be shortened back to the original using `pop_front` or `pop_back`","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/sequence.rs","byte_start":44705,"byte_end":44802,"line_start":110,"line_end":110,"column_start":1,"column_end":98}}]},{"kind":"Type","id":{"krate":0,"index":298},"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/sequence.rs","byte_start":44935,"byte_end":44941,"line_start":113,"line_end":113,"column_start":10,"column_end":16},"name":"Longer","qualname":"::sequence::Lengthen::Longer","value":"type Longer: Shorten<T, Shorter = Self>;","parent":{"krate":0,"index":296},"children":[],"decl_id":null,"docs":" `GenericSequence` that has one more element than `Self`\n","sig":null,"attributes":[{"value":"/ `GenericSequence` that has one more element than `Self`","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/sequence.rs","byte_start":44866,"byte_end":44925,"line_start":112,"line_end":112,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":299},"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/sequence.rs","byte_start":45335,"byte_end":45341,"line_start":129,"line_end":129,"column_start":8,"column_end":14},"name":"append","qualname":"::sequence::Lengthen::append","value":"fn (self, last: T) -> Self::Longer","parent":{"krate":0,"index":296},"children":[],"decl_id":null,"docs":" Returns a new array with the given element appended to the end of it.","sig":null,"attributes":[{"value":"/ Returns a new array with the given element appended to the end of it.","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/sequence.rs","byte_start":44976,"byte_end":45049,"line_start":115,"line_end":115,"column_start":5,"column_end":78}},{"value":"/","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/sequence.rs","byte_start":45054,"byte_end":45057,"line_start":116,"line_end":116,"column_start":5,"column_end":8}},{"value":"/ Example:","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/sequence.rs","byte_start":45062,"byte_end":45074,"line_start":117,"line_end":117,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/sequence.rs","byte_start":45079,"byte_end":45082,"line_start":118,"line_end":118,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/sequence.rs","byte_start":45087,"byte_end":45098,"line_start":119,"line_end":119,"column_start":5,"column_end":16}},{"value":"/ # use generic_array::{arr, sequence::Lengthen};","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/sequence.rs","byte_start":45103,"byte_end":45154,"line_start":120,"line_end":120,"column_start":5,"column_end":56}},{"value":"/ # fn main() {","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/sequence.rs","byte_start":45159,"byte_end":45176,"line_start":121,"line_end":121,"column_start":5,"column_end":22}},{"value":"/ let a = arr![i32; 1, 2, 3];","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/sequence.rs","byte_start":45181,"byte_end":45212,"line_start":122,"line_end":122,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/sequence.rs","byte_start":45217,"byte_end":45220,"line_start":123,"line_end":123,"column_start":5,"column_end":8}},{"value":"/ let b = a.append(4);","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/sequence.rs","byte_start":45225,"byte_end":45249,"line_start":124,"line_end":124,"column_start":5,"column_end":29}},{"value":"/","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/sequence.rs","byte_start":45254,"byte_end":45257,"line_start":125,"line_end":125,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(b, arr![i32; 1, 2, 3, 4]);","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/sequence.rs","byte_start":45262,"byte_end":45303,"line_start":126,"line_end":126,"column_start":5,"column_end":46}},{"value":"/ # }","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/sequence.rs","byte_start":45308,"byte_end":45315,"line_start":127,"line_end":127,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/sequence.rs","byte_start":45320,"byte_end":45327,"line_start":128,"line_end":128,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":300},"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/sequence.rs","byte_start":45742,"byte_end":45749,"line_start":145,"line_end":145,"column_start":8,"column_end":15},"name":"prepend","qualname":"::sequence::Lengthen::prepend","value":"fn (self, first: T) -> Self::Longer","parent":{"krate":0,"index":296},"children":[],"decl_id":null,"docs":" Returns a new array with the given element prepended to the front of it.","sig":null,"attributes":[{"value":"/ Returns a new array with the given element prepended to the front of it.","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/sequence.rs","byte_start":45379,"byte_end":45455,"line_start":131,"line_end":131,"column_start":5,"column_end":81}},{"value":"/","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/sequence.rs","byte_start":45460,"byte_end":45463,"line_start":132,"line_end":132,"column_start":5,"column_end":8}},{"value":"/ Example:","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/sequence.rs","byte_start":45468,"byte_end":45480,"line_start":133,"line_end":133,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/sequence.rs","byte_start":45485,"byte_end":45488,"line_start":134,"line_end":134,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/sequence.rs","byte_start":45493,"byte_end":45504,"line_start":135,"line_end":135,"column_start":5,"column_end":16}},{"value":"/ # use generic_array::{arr, sequence::Lengthen};","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/sequence.rs","byte_start":45509,"byte_end":45560,"line_start":136,"line_end":136,"column_start":5,"column_end":56}},{"value":"/ # fn main() {","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/sequence.rs","byte_start":45565,"byte_end":45582,"line_start":137,"line_end":137,"column_start":5,"column_end":22}},{"value":"/ let a = arr![i32; 1, 2, 3];","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/sequence.rs","byte_start":45587,"byte_end":45618,"line_start":138,"line_end":138,"column_start":5,"column_end":36}},{"value":"/","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/sequence.rs","byte_start":45623,"byte_end":45626,"line_start":139,"line_end":139,"column_start":5,"column_end":8}},{"value":"/ let b = a.prepend(4);","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/sequence.rs","byte_start":45631,"byte_end":45656,"line_start":140,"line_end":140,"column_start":5,"column_end":30}},{"value":"/","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/sequence.rs","byte_start":45661,"byte_end":45664,"line_start":141,"line_end":141,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(b, arr![i32; 4, 1, 2, 3]);","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/sequence.rs","byte_start":45669,"byte_end":45710,"line_start":142,"line_end":142,"column_start":5,"column_end":46}},{"value":"/ # }","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/sequence.rs","byte_start":45715,"byte_end":45722,"line_start":143,"line_end":143,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/sequence.rs","byte_start":45727,"byte_end":45734,"line_start":144,"line_end":144,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":301},"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/sequence.rs","byte_start":46017,"byte_end":46024,"line_start":152,"line_end":152,"column_start":18,"column_end":25},"name":"Shorten","qualname":"::sequence::Shorten","value":"Shorten<T>: Sized + GenericSequence<T>","parent":null,"children":[{"krate":0,"index":303},{"krate":0,"index":304},{"krate":0,"index":305}],"decl_id":null,"docs":" Defines a `GenericSequence` which can be shortened by removing the first or last element from it.","sig":null,"attributes":[{"value":"/ Defines a `GenericSequence` which can be shortened by removing the first or last element from it.","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/sequence.rs","byte_start":45786,"byte_end":45887,"line_start":148,"line_end":148,"column_start":1,"column_end":102}},{"value":"/","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/sequence.rs","byte_start":45888,"byte_end":45891,"line_start":149,"line_end":149,"column_start":1,"column_end":4}},{"value":"/ Additionally, any shortened sequence can be lengthened by","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/sequence.rs","byte_start":45892,"byte_end":45953,"line_start":150,"line_end":150,"column_start":1,"column_end":62}},{"value":"/ appending or prepending an element to it.","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/sequence.rs","byte_start":45954,"byte_end":45999,"line_start":151,"line_end":151,"column_start":1,"column_end":46}}]},{"kind":"Type","id":{"krate":0,"index":303},"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/sequence.rs","byte_start":46131,"byte_end":46138,"line_start":154,"line_end":154,"column_start":10,"column_end":17},"name":"Shorter","qualname":"::sequence::Shorten::Shorter","value":"type Shorter: Lengthen<T, Longer = Self>;","parent":{"krate":0,"index":301},"children":[],"decl_id":null,"docs":" `GenericSequence` that has one less element than `Self`\n","sig":null,"attributes":[{"value":"/ `GenericSequence` that has one less element than `Self`","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/sequence.rs","byte_start":46062,"byte_end":46121,"line_start":153,"line_end":153,"column_start":5,"column_end":64}}]},{"kind":"Method","id":{"krate":0,"index":304},"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/sequence.rs","byte_start":46573,"byte_end":46581,"line_start":171,"line_end":171,"column_start":8,"column_end":16},"name":"pop_back","qualname":"::sequence::Shorten::pop_back","value":"fn (self) -> (Self::Shorter, T)","parent":{"krate":0,"index":301},"children":[],"decl_id":null,"docs":" Returns a new array without the last element, and the last element.","sig":null,"attributes":[{"value":"/ Returns a new array without the last element, and the last element.","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/sequence.rs","byte_start":46173,"byte_end":46244,"line_start":156,"line_end":156,"column_start":5,"column_end":76}},{"value":"/","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/sequence.rs","byte_start":46249,"byte_end":46252,"line_start":157,"line_end":157,"column_start":5,"column_end":8}},{"value":"/ Example:","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/sequence.rs","byte_start":46257,"byte_end":46269,"line_start":158,"line_end":158,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/sequence.rs","byte_start":46274,"byte_end":46277,"line_start":159,"line_end":159,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/sequence.rs","byte_start":46282,"byte_end":46293,"line_start":160,"line_end":160,"column_start":5,"column_end":16}},{"value":"/ # use generic_array::{arr, sequence::Shorten};","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/sequence.rs","byte_start":46298,"byte_end":46348,"line_start":161,"line_end":161,"column_start":5,"column_end":55}},{"value":"/ # fn main() {","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/sequence.rs","byte_start":46353,"byte_end":46370,"line_start":162,"line_end":162,"column_start":5,"column_end":22}},{"value":"/ let a = arr![i32; 1, 2, 3, 4];","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/sequence.rs","byte_start":46375,"byte_end":46409,"line_start":163,"line_end":163,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/sequence.rs","byte_start":46414,"byte_end":46417,"line_start":164,"line_end":164,"column_start":5,"column_end":8}},{"value":"/ let (init, last) = a.pop_back();","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/sequence.rs","byte_start":46422,"byte_end":46458,"line_start":165,"line_end":165,"column_start":5,"column_end":41}},{"value":"/","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/sequence.rs","byte_start":46463,"byte_end":46466,"line_start":166,"line_end":166,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(init, arr![i32; 1, 2, 3]);","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/sequence.rs","byte_start":46471,"byte_end":46512,"line_start":167,"line_end":167,"column_start":5,"column_end":46}},{"value":"/ assert_eq!(last, 4);","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/sequence.rs","byte_start":46517,"byte_end":46541,"line_start":168,"line_end":168,"column_start":5,"column_end":29}},{"value":"/ # }","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/sequence.rs","byte_start":46546,"byte_end":46553,"line_start":169,"line_end":169,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/sequence.rs","byte_start":46558,"byte_end":46565,"line_start":170,"line_end":170,"column_start":5,"column_end":12}}]},{"kind":"Method","id":{"krate":0,"index":305},"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/sequence.rs","byte_start":47011,"byte_end":47020,"line_start":187,"line_end":187,"column_start":8,"column_end":17},"name":"pop_front","qualname":"::sequence::Shorten::pop_front","value":"fn (self) -> (T, Self::Shorter)","parent":{"krate":0,"index":301},"children":[],"decl_id":null,"docs":" Returns a new array without the first element, and the first element.\n Example:","sig":null,"attributes":[{"value":"/ Returns a new array without the first element, and the first element.","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/sequence.rs","byte_start":46616,"byte_end":46689,"line_start":173,"line_end":173,"column_start":5,"column_end":78}},{"value":"/ Example:","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/sequence.rs","byte_start":46694,"byte_end":46706,"line_start":174,"line_end":174,"column_start":5,"column_end":17}},{"value":"/","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/sequence.rs","byte_start":46711,"byte_end":46714,"line_start":175,"line_end":175,"column_start":5,"column_end":8}},{"value":"/ ```rust","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/sequence.rs","byte_start":46719,"byte_end":46730,"line_start":176,"line_end":176,"column_start":5,"column_end":16}},{"value":"/ # use generic_array::{arr, sequence::Shorten};","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/sequence.rs","byte_start":46735,"byte_end":46785,"line_start":177,"line_end":177,"column_start":5,"column_end":55}},{"value":"/ # fn main() {","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/sequence.rs","byte_start":46790,"byte_end":46807,"line_start":178,"line_end":178,"column_start":5,"column_end":22}},{"value":"/ let a = arr![i32; 1, 2, 3, 4];","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/sequence.rs","byte_start":46812,"byte_end":46846,"line_start":179,"line_end":179,"column_start":5,"column_end":39}},{"value":"/","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/sequence.rs","byte_start":46851,"byte_end":46854,"line_start":180,"line_end":180,"column_start":5,"column_end":8}},{"value":"/ let (head, tail) = a.pop_front();","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/sequence.rs","byte_start":46859,"byte_end":46896,"line_start":181,"line_end":181,"column_start":5,"column_end":42}},{"value":"/","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/sequence.rs","byte_start":46901,"byte_end":46904,"line_start":182,"line_end":182,"column_start":5,"column_end":8}},{"value":"/ assert_eq!(head, 1);","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/sequence.rs","byte_start":46909,"byte_end":46933,"line_start":183,"line_end":183,"column_start":5,"column_end":29}},{"value":"/ assert_eq!(tail, arr![i32; 2, 3, 4]);","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/sequence.rs","byte_start":46938,"byte_end":46979,"line_start":184,"line_end":184,"column_start":5,"column_end":46}},{"value":"/ # }","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/sequence.rs","byte_start":46984,"byte_end":46991,"line_start":185,"line_end":185,"column_start":5,"column_end":12}},{"value":"/ ```","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/sequence.rs","byte_start":46996,"byte_end":47003,"line_start":186,"line_end":186,"column_start":5,"column_end":12}}]},{"kind":"Trait","id":{"krate":0,"index":318},"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/sequence.rs","byte_start":49255,"byte_end":49260,"line_start":266,"line_end":266,"column_start":18,"column_end":23},"name":"Split","qualname":"::sequence::Split","value":"Split<T, K>: GenericSequence<T>","parent":null,"children":[{"krate":0,"index":321},{"krate":0,"index":322},{"krate":0,"index":323}],"decl_id":null,"docs":" Defines a `GenericSequence` that can be split into two parts at a given pivot index.\n","sig":null,"attributes":[{"value":"/ Defines a `GenericSequence` that can be split into two parts at a given pivot index.","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/sequence.rs","byte_start":49149,"byte_end":49237,"line_start":265,"line_end":265,"column_start":1,"column_end":89}}]},{"kind":"Type","id":{"krate":0,"index":321},"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/sequence.rs","byte_start":49375,"byte_end":49380,"line_start":271,"line_end":271,"column_start":10,"column_end":15},"name":"First","qualname":"::sequence::Split::First","value":"type First: GenericSequence<T>;","parent":{"krate":0,"index":318},"children":[],"decl_id":null,"docs":" First part of the resulting split array\n","sig":null,"attributes":[{"value":"/ First part of the resulting split array","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/sequence.rs","byte_start":49322,"byte_end":49365,"line_start":270,"line_end":270,"column_start":5,"column_end":48}}]},{"kind":"Type","id":{"krate":0,"index":322},"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/sequence.rs","byte_start":49460,"byte_end":49466,"line_start":273,"line_end":273,"column_start":10,"column_end":16},"name":"Second","qualname":"::sequence::Split::Second","value":"type Second: GenericSequence<T>;","parent":{"krate":0,"index":318},"children":[],"decl_id":null,"docs":" Second part of the resulting split array\n","sig":null,"attributes":[{"value":"/ Second part of the resulting split array","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/sequence.rs","byte_start":49406,"byte_end":49450,"line_start":272,"line_end":272,"column_start":5,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":323},"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/sequence.rs","byte_start":49583,"byte_end":49588,"line_start":276,"line_end":276,"column_start":8,"column_end":13},"name":"split","qualname":"::sequence::Split::split","value":"fn (self) -> (Self::First, Self::Second)","parent":{"krate":0,"index":318},"children":[],"decl_id":null,"docs":" Splits an array at the given index, returning the separate parts of the array.\n","sig":null,"attributes":[{"value":"/ Splits an array at the given index, returning the separate parts of the array.","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/sequence.rs","byte_start":49493,"byte_end":49575,"line_start":275,"line_end":275,"column_start":5,"column_end":87}}]},{"kind":"Trait","id":{"krate":0,"index":347},"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/sequence.rs","byte_start":51455,"byte_end":51461,"line_start":343,"line_end":343,"column_start":18,"column_end":24},"name":"Concat","qualname":"::sequence::Concat","value":"Concat<T, M>: GenericSequence<T>","parent":null,"children":[{"krate":0,"index":350},{"krate":0,"index":351},{"krate":0,"index":352}],"decl_id":null,"docs":" Defines `GenericSequence`s which can be joined together, forming a larger array.\n","sig":null,"attributes":[{"value":"/ Defines `GenericSequence`s which can be joined together, forming a larger array.","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/sequence.rs","byte_start":51353,"byte_end":51437,"line_start":342,"line_end":342,"column_start":1,"column_end":85}}]},{"kind":"Type","id":{"krate":0,"index":350},"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/sequence.rs","byte_start":51576,"byte_end":51580,"line_start":348,"line_end":348,"column_start":10,"column_end":14},"name":"Rest","qualname":"::sequence::Concat::Rest","value":"type Rest: GenericSequence<T, Length = M>;","parent":{"krate":0,"index":347},"children":[],"decl_id":null,"docs":" Sequence to be concatenated with `self`\n","sig":null,"attributes":[{"value":"/ Sequence to be concatenated with `self`","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/sequence.rs","byte_start":51523,"byte_end":51566,"line_start":347,"line_end":347,"column_start":5,"column_end":48}}]},{"kind":"Type","id":{"krate":0,"index":351},"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/sequence.rs","byte_start":51680,"byte_end":51686,"line_start":351,"line_end":351,"column_start":10,"column_end":16},"name":"Output","qualname":"::sequence::Concat::Output","value":"type Output: GenericSequence<T>;","parent":{"krate":0,"index":347},"children":[],"decl_id":null,"docs":" Resulting sequence formed by the concatenation.\n","sig":null,"attributes":[{"value":"/ Resulting sequence formed by the concatenation.","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/sequence.rs","byte_start":51619,"byte_end":51670,"line_start":350,"line_end":350,"column_start":5,"column_end":56}}]},{"kind":"Method","id":{"krate":0,"index":352},"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/sequence.rs","byte_start":51761,"byte_end":51767,"line_start":354,"line_end":354,"column_start":8,"column_end":14},"name":"concat","qualname":"::sequence::Concat::concat","value":"fn (self, rest: Self::Rest) -> Self::Output","parent":{"krate":0,"index":347},"children":[],"decl_id":null,"docs":" Concatenate, or join, two sequences.\n","sig":null,"attributes":[{"value":"/ Concatenate, or join, two sequences.","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/sequence.rs","byte_start":51713,"byte_end":51753,"line_start":353,"line_end":353,"column_start":5,"column_end":45}}]},{"kind":"Trait","id":{"krate":0,"index":363},"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","byte_start":2397,"byte_end":2408,"line_start":105,"line_end":105,"column_start":18,"column_end":29},"name":"ArrayLength","qualname":"::ArrayLength","value":"ArrayLength<T>: Unsigned","parent":null,"children":[{"krate":0,"index":365}],"decl_id":null,"docs":" Trait making `GenericArray` work, marking types to be used as length of an array\n","sig":null,"attributes":[{"value":"/ Trait making `GenericArray` work, marking types to be used as length of an array","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","byte_start":2295,"byte_end":2379,"line_start":104,"line_end":104,"column_start":1,"column_end":85}}]},{"kind":"Type","id":{"krate":0,"index":365},"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","byte_start":2500,"byte_end":2509,"line_start":107,"line_end":107,"column_start":10,"column_end":19},"name":"ArrayType","qualname":"::ArrayLength::ArrayType","value":"type ArrayType;","parent":{"krate":0,"index":363},"children":[],"decl_id":null,"docs":" Associated type representing the array type for the number\n","sig":null,"attributes":[{"value":"/ Associated type representing the array type for the number","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","byte_start":2428,"byte_end":2490,"line_start":106,"line_end":106,"column_start":5,"column_end":67}}]},{"kind":"Struct","id":{"krate":0,"index":369},"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","byte_start":2724,"byte_end":2744,"line_start":119,"line_end":119,"column_start":12,"column_end":32},"name":"GenericArrayImplEven","qualname":"::GenericArrayImplEven","value":"GenericArrayImplEven {  }","parent":null,"children":[{"krate":0,"index":372},{"krate":0,"index":373},{"krate":0,"index":374}],"decl_id":null,"docs":" Internal type used to generate a struct of appropriate size\n","sig":null,"attributes":[{"value":"/ Internal type used to generate a struct of appropriate size","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","byte_start":2603,"byte_end":2666,"line_start":115,"line_end":115,"column_start":1,"column_end":64}},{"value":"allow(dead_code)","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","byte_start":2667,"byte_end":2686,"line_start":116,"line_end":116,"column_start":1,"column_end":20}},{"value":"repr(C)","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","byte_start":2687,"byte_end":2697,"line_start":117,"line_end":117,"column_start":1,"column_end":11}}]},{"kind":"Struct","id":{"krate":0,"index":382},"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","byte_start":3287,"byte_end":3306,"line_start":141,"line_end":141,"column_start":12,"column_end":31},"name":"GenericArrayImplOdd","qualname":"::GenericArrayImplOdd","value":"GenericArrayImplOdd {  }","parent":null,"children":[{"krate":0,"index":385},{"krate":0,"index":386},{"krate":0,"index":387}],"decl_id":null,"docs":" Internal type used to generate a struct of appropriate size\n","sig":null,"attributes":[{"value":"/ Internal type used to generate a struct of appropriate size","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","byte_start":3166,"byte_end":3229,"line_start":137,"line_end":137,"column_start":1,"column_end":64}},{"value":"allow(dead_code)","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","byte_start":3230,"byte_end":3249,"line_start":138,"line_end":138,"column_start":1,"column_end":20}},{"value":"repr(C)","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","byte_start":3250,"byte_end":3260,"line_start":139,"line_end":139,"column_start":1,"column_end":11}}]},{"kind":"Struct","id":{"krate":0,"index":403},"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","byte_start":4141,"byte_end":4153,"line_start":172,"line_end":172,"column_start":12,"column_end":24},"name":"GenericArray","qualname":"::GenericArray","value":"GenericArray {  }","parent":null,"children":[{"krate":0,"index":406}],"decl_id":null,"docs":" Struct representing a generic array - `GenericArray<T, N>` works like [T; N]\n","sig":null,"attributes":[{"value":"/ Struct representing a generic array - `GenericArray<T, N>` works like [T; N]","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","byte_start":4008,"byte_end":4088,"line_start":169,"line_end":169,"column_start":1,"column_end":81}},{"value":"allow(dead_code)","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","byte_start":4089,"byte_end":4108,"line_start":170,"line_end":170,"column_start":1,"column_end":20}},{"value":"repr(transparent)","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","byte_start":4109,"byte_end":4129,"line_start":171,"line_end":171,"column_start":1,"column_end":21}}]},{"kind":"Struct","id":{"krate":0,"index":422},"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","byte_start":5089,"byte_end":5101,"line_start":207,"line_end":207,"column_start":12,"column_end":24},"name":"ArrayBuilder","qualname":"::ArrayBuilder","value":"ArrayBuilder {  }","parent":null,"children":[{"krate":0,"index":425},{"krate":0,"index":426}],"decl_id":null,"docs":" Creates an array one element at a time using a mutable iterator\n you can write to with `ptr::write`.","sig":null,"attributes":[{"value":"/ Creates an array one element at a time using a mutable iterator","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","byte_start":4819,"byte_end":4886,"line_start":201,"line_end":201,"column_start":1,"column_end":68}},{"value":"/ you can write to with `ptr::write`.","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","byte_start":4887,"byte_end":4926,"line_start":202,"line_end":202,"column_start":1,"column_end":40}},{"value":"/","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","byte_start":4927,"byte_end":4930,"line_start":203,"line_end":203,"column_start":1,"column_end":4}},{"value":"/ Incremenent the position while iterating to mark off created elements,","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","byte_start":4931,"byte_end":5005,"line_start":204,"line_end":204,"column_start":1,"column_end":75}},{"value":"/ which will be dropped if `into_inner` is not called.","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","byte_start":5006,"byte_end":5062,"line_start":205,"line_end":205,"column_start":1,"column_end":57}}]},{"kind":"Method","id":{"krate":0,"index":430},"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","byte_start":5293,"byte_end":5296,"line_start":215,"line_end":215,"column_start":19,"column_end":22},"name":"new","qualname":"<ArrayBuilder<T, N>>::new","value":"fn () -> ArrayBuilder<T, N>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","byte_start":5265,"byte_end":5274,"line_start":214,"line_end":214,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":431},"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","byte_start":5703,"byte_end":5716,"line_start":228,"line_end":228,"column_start":19,"column_end":32},"name":"iter_position","qualname":"<ArrayBuilder<T, N>>::iter_position","value":"fn (&mut self) -> (slice::IterMut<T>, &mut usize)","parent":null,"children":[],"decl_id":null,"docs":" Creates a mutable iterator for writing to the array using `ptr::write`.","sig":null,"attributes":[{"value":"/ Creates a mutable iterator for writing to the array using `ptr::write`.","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","byte_start":5434,"byte_end":5509,"line_start":222,"line_end":222,"column_start":5,"column_end":80}},{"value":"/","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","byte_start":5514,"byte_end":5517,"line_start":223,"line_end":223,"column_start":5,"column_end":8}},{"value":"/ Increment the position value given as a mutable reference as you iterate","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","byte_start":5522,"byte_end":5598,"line_start":224,"line_end":224,"column_start":5,"column_end":81}},{"value":"/ to mark how many elements have been created.","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","byte_start":5603,"byte_end":5651,"line_start":225,"line_end":225,"column_start":5,"column_end":53}},{"value":"inline","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","byte_start":5675,"byte_end":5684,"line_start":227,"line_end":227,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":432},"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","byte_start":5997,"byte_end":6007,"line_start":236,"line_end":236,"column_start":19,"column_end":29},"name":"into_inner","qualname":"<ArrayBuilder<T, N>>::into_inner","value":"fn (self) -> GenericArray<T, N>","parent":null,"children":[],"decl_id":null,"docs":" When done writing (assuming all elements have been written to),\n get the inner array.\n","sig":null,"attributes":[{"value":"/ When done writing (assuming all elements have been written to),","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","byte_start":5849,"byte_end":5916,"line_start":232,"line_end":232,"column_start":5,"column_end":72}},{"value":"/ get the inner array.","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","byte_start":5921,"byte_end":5945,"line_start":233,"line_end":233,"column_start":5,"column_end":29}},{"value":"inline","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","byte_start":5969,"byte_end":5978,"line_start":235,"line_end":235,"column_start":5,"column_end":14}}]},{"kind":"Struct","id":{"krate":0,"index":437},"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","byte_start":6575,"byte_end":6588,"line_start":260,"line_end":260,"column_start":12,"column_end":25},"name":"ArrayConsumer","qualname":"::ArrayConsumer","value":"ArrayConsumer {  }","parent":null,"children":[{"krate":0,"index":440},{"krate":0,"index":441}],"decl_id":null,"docs":" Consumes an array.","sig":null,"attributes":[{"value":"/ Consumes an array.","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","byte_start":6404,"byte_end":6426,"line_start":255,"line_end":255,"column_start":1,"column_end":23}},{"value":"/","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","byte_start":6427,"byte_end":6430,"line_start":256,"line_end":256,"column_start":1,"column_end":4}},{"value":"/ Increment the position while iterating and any leftover elements","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","byte_start":6431,"byte_end":6499,"line_start":257,"line_end":257,"column_start":1,"column_end":69}},{"value":"/ will be dropped if position does not go to N","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","byte_start":6500,"byte_end":6548,"line_start":258,"line_end":258,"column_start":1,"column_end":49}}]},{"kind":"Method","id":{"krate":0,"index":445},"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","byte_start":6782,"byte_end":6785,"line_start":268,"line_end":268,"column_start":19,"column_end":22},"name":"new","qualname":"<ArrayConsumer<T, N>>::new","value":"fn (array: GenericArray<T, N>) -> ArrayConsumer<T, N>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"inline","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","byte_start":6754,"byte_end":6763,"line_start":267,"line_end":267,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":446},"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","byte_start":7203,"byte_end":7216,"line_start":281,"line_end":281,"column_start":19,"column_end":32},"name":"iter_position","qualname":"<ArrayConsumer<T, N>>::iter_position","value":"fn (&mut self) -> (slice::Iter<T>, &mut usize)","parent":null,"children":[],"decl_id":null,"docs":" Creates an iterator and mutable reference to the internal position\n to keep track of consumed elements.","sig":null,"attributes":[{"value":"/ Creates an iterator and mutable reference to the internal position","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","byte_start":6953,"byte_end":7023,"line_start":275,"line_end":275,"column_start":5,"column_end":75}},{"value":"/ to keep track of consumed elements.","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","byte_start":7028,"byte_end":7067,"line_start":276,"line_end":276,"column_start":5,"column_end":44}},{"value":"/","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","byte_start":7072,"byte_end":7075,"line_start":277,"line_end":277,"column_start":5,"column_end":8}},{"value":"/ Increment the position as you iterate to mark off consumed elements","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","byte_start":7080,"byte_end":7151,"line_start":278,"line_end":278,"column_start":5,"column_end":76}},{"value":"inline","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","byte_start":7175,"byte_end":7184,"line_start":280,"line_end":280,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":515},"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","byte_start":13587,"byte_end":13595,"line_start":522,"line_end":522,"column_start":12,"column_end":20},"name":"as_slice","qualname":"<GenericArray<T, N>>::as_slice","value":"fn (&self) -> &[T]","parent":null,"children":[],"decl_id":null,"docs":" Extracts a slice containing the entire array.\n","sig":null,"attributes":[{"value":"/ Extracts a slice containing the entire array.","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","byte_start":13512,"byte_end":13561,"line_start":520,"line_end":520,"column_start":5,"column_end":54}},{"value":"inline","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","byte_start":13566,"byte_end":13575,"line_start":521,"line_end":521,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":516},"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","byte_start":13728,"byte_end":13740,"line_start":528,"line_end":528,"column_start":12,"column_end":24},"name":"as_mut_slice","qualname":"<GenericArray<T, N>>::as_mut_slice","value":"fn (&mut self) -> &mut [T]","parent":null,"children":[],"decl_id":null,"docs":" Extracts a mutable slice containing the entire array.\n","sig":null,"attributes":[{"value":"/ Extracts a mutable slice containing the entire array.","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","byte_start":13645,"byte_end":13702,"line_start":526,"line_end":526,"column_start":5,"column_end":62}},{"value":"inline","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","byte_start":13707,"byte_end":13716,"line_start":527,"line_end":527,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":517},"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","byte_start":13975,"byte_end":13985,"line_start":536,"line_end":536,"column_start":12,"column_end":22},"name":"from_slice","qualname":"<GenericArray<T, N>>::from_slice","value":"fn (slice: &[T]) -> &GenericArray<T, N>","parent":null,"children":[],"decl_id":null,"docs":" Converts slice to a generic array reference with inferred length;","sig":null,"attributes":[{"value":"/ Converts slice to a generic array reference with inferred length;","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","byte_start":13802,"byte_end":13871,"line_start":532,"line_end":532,"column_start":5,"column_end":74}},{"value":"/","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","byte_start":13876,"byte_end":13879,"line_start":533,"line_end":533,"column_start":5,"column_end":8}},{"value":"/ Length of the slice must be equal to the length of the array.","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","byte_start":13884,"byte_end":13949,"line_start":534,"line_end":534,"column_start":5,"column_end":70}},{"value":"inline","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","byte_start":13954,"byte_end":13963,"line_start":535,"line_end":535,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":518},"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","byte_start":14223,"byte_end":14237,"line_start":544,"line_end":544,"column_start":12,"column_end":26},"name":"from_mut_slice","qualname":"<GenericArray<T, N>>::from_mut_slice","value":"fn (slice: &mut [T]) -> &mut GenericArray<T, N>","parent":null,"children":[],"decl_id":null,"docs":" Converts mutable slice to a mutable generic array reference","sig":null,"attributes":[{"value":"/ Converts mutable slice to a mutable generic array reference","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","byte_start":14056,"byte_end":14119,"line_start":540,"line_end":540,"column_start":5,"column_end":68}},{"value":"/","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","byte_start":14124,"byte_end":14127,"line_start":541,"line_end":541,"column_start":5,"column_end":8}},{"value":"/ Length of the slice must be equal to the length of the array.","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","byte_start":14132,"byte_end":14197,"line_start":542,"line_end":542,"column_start":5,"column_end":70}},{"value":"inline","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","byte_start":14202,"byte_end":14211,"line_start":543,"line_end":543,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":532},"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","byte_start":15391,"byte_end":15407,"line_start":581,"line_end":581,"column_start":12,"column_end":28},"name":"clone_from_slice","qualname":"<GenericArray<T, N>>::clone_from_slice","value":"fn (list: &[T]) -> GenericArray<T, N>","parent":null,"children":[],"decl_id":null,"docs":" Construct a `GenericArray` from a slice by cloning its content","sig":null,"attributes":[{"value":"/ Construct a `GenericArray` from a slice by cloning its content","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","byte_start":15222,"byte_end":15288,"line_start":577,"line_end":577,"column_start":5,"column_end":71}},{"value":"/","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","byte_start":15293,"byte_end":15296,"line_start":578,"line_end":578,"column_start":5,"column_end":8}},{"value":"/ Length of the slice must be equal to the length of the array","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","byte_start":15301,"byte_end":15365,"line_start":579,"line_end":579,"column_start":5,"column_end":69}},{"value":"inline","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","byte_start":15370,"byte_end":15379,"line_start":580,"line_end":580,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":536},"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","byte_start":15836,"byte_end":15851,"line_start":594,"line_end":594,"column_start":12,"column_end":27},"name":"from_exact_iter","qualname":"<GenericArray<T, N>>::from_exact_iter","value":"fn <I> (iter: I) -> Option<Self>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `GenericArray` instance from an iterator with a known exact size.","sig":null,"attributes":[{"value":"/ Creates a new `GenericArray` instance from an iterator with a known exact size.","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","byte_start":15636,"byte_end":15719,"line_start":591,"line_end":591,"column_start":5,"column_end":88}},{"value":"/","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","byte_start":15724,"byte_end":15727,"line_start":592,"line_end":592,"column_start":5,"column_end":8}},{"value":"/ Returns `None` if the size is not equal to the number of elements in the `GenericArray`.","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","byte_start":15732,"byte_end":15824,"line_start":593,"line_end":593,"column_start":5,"column_end":97}}]},{"kind":"Function","id":{"krate":0,"index":539},"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","byte_start":16718,"byte_end":16727,"line_start":627,"line_end":627,"column_start":15,"column_end":24},"name":"transmute","qualname":"::transmute","value":"fn <A, B> (a: A) -> B","parent":null,"children":[],"decl_id":null,"docs":" A reimplementation of the `transmute` function, avoiding problems\n when the compiler can't prove equal sizes.\n","sig":null,"attributes":[{"value":"/ A reimplementation of the `transmute` function, avoiding problems","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","byte_start":16562,"byte_end":16631,"line_start":623,"line_end":623,"column_start":1,"column_end":70}},{"value":"/ when the compiler can't prove equal sizes.","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","byte_start":16632,"byte_end":16678,"line_start":624,"line_end":624,"column_start":1,"column_end":47}},{"value":"inline","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","byte_start":16679,"byte_end":16688,"line_start":625,"line_end":625,"column_start":1,"column_end":10}}]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/hex.rs","byte_start":19018,"byte_end":19030,"line_start":27,"line_end":27,"column_start":44,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":19}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Direct","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/hex.rs","byte_start":20513,"byte_end":20525,"line_start":67,"line_end":67,"column_start":44,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":26}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Direct","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/impls.rs","byte_start":22321,"byte_end":22333,"line_start":11,"line_end":11,"column_start":33,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":50}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Direct","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/impls.rs","byte_start":22490,"byte_end":22502,"line_start":21,"line_end":21,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":55}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Direct","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/impls.rs","byte_start":22650,"byte_end":22662,"line_start":30,"line_end":30,"column_start":27,"column_end":39},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Direct","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/impls.rs","byte_start":22763,"byte_end":22775,"line_start":37,"line_end":37,"column_start":37,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":62}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/impls.rs","byte_start":22910,"byte_end":22922,"line_start":45,"line_end":45,"column_start":23,"column_end":35},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/impls.rs","byte_start":22995,"byte_end":23007,"line_start":47,"line_end":47,"column_start":39,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":69}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/impls.rs","byte_start":23221,"byte_end":23233,"line_start":56,"line_end":56,"column_start":25,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":73}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/impls.rs","byte_start":23420,"byte_end":23432,"line_start":65,"line_end":65,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":77}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/impls.rs","byte_start":23593,"byte_end":23605,"line_start":74,"line_end":74,"column_start":28,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":81}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/impls.rs","byte_start":23753,"byte_end":23765,"line_start":84,"line_end":84,"column_start":31,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":85}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/impls.rs","byte_start":23925,"byte_end":23937,"line_start":94,"line_end":94,"column_start":27,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":89}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/impls.rs","byte_start":24081,"byte_end":24093,"line_start":104,"line_end":104,"column_start":27,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":93}],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/impls.rs","byte_start":24249,"byte_end":24261,"line_start":114,"line_end":114,"column_start":27,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":97}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/arr.rs","byte_start":28376,"byte_end":28378,"line_start":13,"line_end":13,"column_start":38,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":131}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Inherent","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/iter.rs","byte_start":35955,"byte_end":35971,"line_start":30,"line_end":30,"column_start":12,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":205},{"krate":0,"index":206}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/iter.rs","byte_start":36431,"byte_end":36443,"line_start":47,"line_end":47,"column_start":29,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":210},{"krate":0,"index":211},{"krate":0,"index":212}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/iter.rs","byte_start":36813,"byte_end":36829,"line_start":64,"line_end":64,"column_start":39,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":216}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/iter.rs","byte_start":37056,"byte_end":37072,"line_start":75,"line_end":75,"column_start":21,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":220}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/iter.rs","byte_start":37395,"byte_end":37411,"line_start":91,"line_end":91,"column_start":29,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":224}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/iter.rs","byte_start":38132,"byte_end":38148,"line_start":117,"line_end":117,"column_start":25,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":228},{"krate":0,"index":229},{"krate":0,"index":230},{"krate":0,"index":234},{"krate":0,"index":235},{"krate":0,"index":236},{"krate":0,"index":237}],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/iter.rs","byte_start":39850,"byte_end":39866,"line_start":197,"line_end":197,"column_start":36,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":241},{"krate":0,"index":242}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Direct","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/iter.rs","byte_start":40814,"byte_end":40830,"line_start":240,"line_end":240,"column_start":34,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":249}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/iter.rs","byte_start":40972,"byte_end":40988,"line_start":249,"line_end":249,"column_start":30,"column_end":46},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/sequence.rs","byte_start":47103,"byte_end":47115,"line_start":190,"line_end":190,"column_start":51,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":309},{"krate":0,"index":310},{"krate":0,"index":311}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Direct","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/sequence.rs","byte_start":48360,"byte_end":48372,"line_start":232,"line_end":232,"column_start":50,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":315},{"krate":0,"index":316},{"krate":0,"index":317}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Direct","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/sequence.rs","byte_start":49667,"byte_end":49679,"line_start":279,"line_end":279,"column_start":38,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":328},{"krate":0,"index":329},{"krate":0,"index":330}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Direct","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/sequence.rs","byte_start":51850,"byte_end":51862,"line_start":357,"line_end":357,"column_start":39,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":357},{"krate":0,"index":358},{"krate":0,"index":359}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Direct","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","byte_start":2548,"byte_end":2553,"line_start":110,"line_end":110,"column_start":35,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":368}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","byte_start":2852,"byte_end":2872,"line_start":125,"line_end":125,"column_start":36,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":378}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Direct","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","byte_start":3135,"byte_end":3155,"line_start":135,"line_end":135,"column_start":33,"column_end":53},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Direct","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","byte_start":3398,"byte_end":3417,"line_start":147,"line_end":147,"column_start":36,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":391}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Direct","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","byte_start":3681,"byte_end":3700,"line_start":157,"line_end":157,"column_start":33,"column_end":52},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Direct","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","byte_start":3764,"byte_end":3768,"line_start":159,"line_end":159,"column_start":54,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":398}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Direct","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","byte_start":3913,"byte_end":3917,"line_start":164,"line_end":164,"column_start":54,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":402}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","byte_start":4254,"byte_end":4266,"line_start":176,"line_end":176,"column_start":50,"column_end":62},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","byte_start":4325,"byte_end":4337,"line_start":177,"line_end":177,"column_start":50,"column_end":62},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","byte_start":4369,"byte_end":4381,"line_start":179,"line_end":179,"column_start":22,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":416},{"krate":0,"index":417}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","byte_start":4612,"byte_end":4624,"line_start":191,"line_end":191,"column_start":25,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":421}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Inherent","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","byte_start":5221,"byte_end":5233,"line_start":212,"line_end":212,"column_start":28,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":430},{"krate":0,"index":431},{"krate":0,"index":432}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","byte_start":6184,"byte_end":6196,"line_start":245,"line_end":245,"column_start":37,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":436}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Inherent","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","byte_start":6709,"byte_end":6722,"line_start":265,"line_end":265,"column_start":28,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":445},{"krate":0,"index":446}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","byte_start":7355,"byte_end":7368,"line_start":286,"line_end":286,"column_start":37,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":450}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Direct","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","byte_start":8139,"byte_end":8151,"line_start":320,"line_end":320,"column_start":32,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":468}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Direct","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","byte_start":9146,"byte_end":9158,"line_start":361,"line_end":361,"column_start":42,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":475},{"krate":0,"index":476},{"krate":0,"index":477},{"krate":0,"index":480},{"krate":0,"index":485}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","byte_start":11778,"byte_end":11790,"line_start":450,"line_end":450,"column_start":54,"column_end":66},"value":"","parent":null,"children":[{"krate":0,"index":495}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Direct","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","byte_start":11986,"byte_end":11998,"line_start":458,"line_end":458,"column_start":45,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":499},{"krate":0,"index":503},{"krate":0,"index":508}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Inherent","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","byte_start":13458,"byte_end":13470,"line_start":516,"line_end":516,"column_start":12,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":515},{"krate":0,"index":516},{"krate":0,"index":517},{"krate":0,"index":518}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Inherent","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","byte_start":15168,"byte_end":15180,"line_start":573,"line_end":573,"column_start":19,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":532}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Inherent","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","byte_start":15582,"byte_end":15594,"line_start":587,"line_end":587,"column_start":12,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":536}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","byte_start":2150,"byte_end":2153,"line_start":95,"line_end":95,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":119}},{"kind":"Mod","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","byte_start":2163,"byte_end":2173,"line_start":96,"line_end":96,"column_start":9,"column_end":19},"ref_id":{"krate":0,"index":139}},{"kind":"Mod","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","byte_start":2183,"byte_end":2187,"line_start":97,"line_end":97,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":184}},{"kind":"Mod","span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","byte_start":2197,"byte_end":2205,"line_start":98,"line_end":98,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":253}}],"macro_refs":[],"relations":[{"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/hex.rs","byte_start":19018,"byte_end":19030,"line_start":27,"line_end":27,"column_start":44,"column_end":56},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":403},"to":{"krate":1,"index":6080}},{"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/hex.rs","byte_start":20513,"byte_end":20525,"line_start":67,"line_end":67,"column_start":44,"column_end":56},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":403},"to":{"krate":1,"index":6082}},{"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/impls.rs","byte_start":22321,"byte_end":22333,"line_start":11,"line_end":11,"column_start":33,"column_end":45},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":403},"to":{"krate":1,"index":1895}},{"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/impls.rs","byte_start":22490,"byte_end":22502,"line_start":21,"line_end":21,"column_start":29,"column_end":41},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":403},"to":{"krate":1,"index":1606}},{"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/impls.rs","byte_start":22650,"byte_end":22662,"line_start":30,"line_end":30,"column_start":27,"column_end":39},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":403},"to":{"krate":1,"index":1914}},{"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/impls.rs","byte_start":22763,"byte_end":22775,"line_start":37,"line_end":37,"column_start":37,"column_end":49},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":403},"to":{"krate":1,"index":1634}},{"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/impls.rs","byte_start":22910,"byte_end":22922,"line_start":45,"line_end":45,"column_start":23,"column_end":35},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":403},"to":{"krate":1,"index":1639}},{"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/impls.rs","byte_start":22995,"byte_end":23007,"line_start":47,"line_end":47,"column_start":39,"column_end":51},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":403},"to":{"krate":1,"index":1671}},{"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/impls.rs","byte_start":23221,"byte_end":23233,"line_start":56,"line_end":56,"column_start":25,"column_end":37},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":403},"to":{"krate":1,"index":1660}},{"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/impls.rs","byte_start":23420,"byte_end":23432,"line_start":65,"line_end":65,"column_start":29,"column_end":41},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":403},"to":{"krate":1,"index":6069}},{"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/impls.rs","byte_start":23593,"byte_end":23605,"line_start":74,"line_end":74,"column_start":28,"column_end":40},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":403},"to":{"krate":1,"index":1584}},{"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/impls.rs","byte_start":23753,"byte_end":23765,"line_start":84,"line_end":84,"column_start":31,"column_end":43},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":403},"to":{"krate":1,"index":1587}},{"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/impls.rs","byte_start":23925,"byte_end":23937,"line_start":94,"line_end":94,"column_start":27,"column_end":39},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":403},"to":{"krate":1,"index":1816}},{"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/impls.rs","byte_start":24081,"byte_end":24093,"line_start":104,"line_end":104,"column_start":27,"column_end":39},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":403},"to":{"krate":1,"index":1819}},{"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/impls.rs","byte_start":24249,"byte_end":24261,"line_start":114,"line_end":114,"column_start":27,"column_end":39},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":403},"to":{"krate":1,"index":6257}},{"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/arr.rs","byte_start":28261,"byte_end":28272,"line_start":8,"line_end":8,"column_start":44,"column_end":55},"kind":"SuperTrait","from":{"krate":0,"index":363},"to":{"krate":0,"index":123}},{"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/arr.rs","byte_start":28376,"byte_end":28378,"line_start":13,"line_end":13,"column_start":38,"column_end":40},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":129},"to":{"krate":0,"index":123}},{"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/functional.rs","byte_start":32121,"byte_end":32136,"line_start":12,"line_end":12,"column_start":47,"column_end":62},"kind":"SuperTrait","from":{"krate":0,"index":261},"to":{"krate":0,"index":143}},{"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/functional.rs","byte_start":33209,"byte_end":33224,"line_start":43,"line_end":43,"column_start":41,"column_end":56},"kind":"SuperTrait","from":{"krate":0,"index":261},"to":{"krate":0,"index":163}},{"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/iter.rs","byte_start":35955,"byte_end":35971,"line_start":30,"line_end":30,"column_start":12,"column_end":28},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":196},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/iter.rs","byte_start":36431,"byte_end":36443,"line_start":47,"line_end":47,"column_start":29,"column_end":41},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":403},"to":{"krate":1,"index":4759}},{"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/iter.rs","byte_start":36813,"byte_end":36829,"line_start":64,"line_end":64,"column_start":39,"column_end":55},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":196},"to":{"krate":1,"index":6069}},{"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/iter.rs","byte_start":37056,"byte_end":37072,"line_start":75,"line_end":75,"column_start":21,"column_end":37},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":196},"to":{"krate":1,"index":2097}},{"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/iter.rs","byte_start":37395,"byte_end":37411,"line_start":91,"line_end":91,"column_start":29,"column_end":45},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":196},"to":{"krate":1,"index":1606}},{"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/iter.rs","byte_start":38132,"byte_end":38148,"line_start":117,"line_end":117,"column_start":25,"column_end":41},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":196},"to":{"krate":1,"index":4852}},{"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/iter.rs","byte_start":39850,"byte_end":39866,"line_start":197,"line_end":197,"column_start":36,"column_end":52},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":196},"to":{"krate":1,"index":4778}},{"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/iter.rs","byte_start":40814,"byte_end":40830,"line_start":240,"line_end":240,"column_start":34,"column_end":50},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":196},"to":{"krate":1,"index":4807}},{"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/iter.rs","byte_start":40972,"byte_end":40988,"line_start":249,"line_end":249,"column_start":30,"column_end":46},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":196},"to":{"krate":1,"index":5114}},{"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/sequence.rs","byte_start":41721,"byte_end":41726,"line_start":12,"line_end":12,"column_start":38,"column_end":43},"kind":"SuperTrait","from":{"krate":1,"index":1909},"to":{"krate":0,"index":261}},{"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/sequence.rs","byte_start":41729,"byte_end":41741,"line_start":12,"line_end":12,"column_start":46,"column_end":58},"kind":"SuperTrait","from":{"krate":1,"index":4759},"to":{"krate":0,"index":261}},{"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/sequence.rs","byte_start":44833,"byte_end":44838,"line_start":111,"line_end":111,"column_start":31,"column_end":36},"kind":"SuperTrait","from":{"krate":1,"index":1909},"to":{"krate":0,"index":296}},{"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/sequence.rs","byte_start":44841,"byte_end":44856,"line_start":111,"line_end":111,"column_start":39,"column_end":54},"kind":"SuperTrait","from":{"krate":0,"index":261},"to":{"krate":0,"index":296}},{"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/sequence.rs","byte_start":46029,"byte_end":46034,"line_start":152,"line_end":152,"column_start":30,"column_end":35},"kind":"SuperTrait","from":{"krate":1,"index":1909},"to":{"krate":0,"index":301}},{"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/sequence.rs","byte_start":46037,"byte_end":46052,"line_start":152,"line_end":152,"column_start":38,"column_end":53},"kind":"SuperTrait","from":{"krate":0,"index":261},"to":{"krate":0,"index":301}},{"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/sequence.rs","byte_start":47103,"byte_end":47115,"line_start":190,"line_end":190,"column_start":51,"column_end":63},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":403},"to":{"krate":0,"index":296}},{"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/sequence.rs","byte_start":48360,"byte_end":48372,"line_start":232,"line_end":232,"column_start":50,"column_end":62},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":403},"to":{"krate":0,"index":301}},{"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/sequence.rs","byte_start":49268,"byte_end":49283,"line_start":266,"line_end":266,"column_start":31,"column_end":46},"kind":"SuperTrait","from":{"krate":0,"index":261},"to":{"krate":0,"index":318}},{"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/sequence.rs","byte_start":49667,"byte_end":49679,"line_start":279,"line_end":279,"column_start":38,"column_end":50},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":403},"to":{"krate":0,"index":318}},{"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/sequence.rs","byte_start":51469,"byte_end":51484,"line_start":343,"line_end":343,"column_start":32,"column_end":47},"kind":"SuperTrait","from":{"krate":0,"index":261},"to":{"krate":0,"index":347}},{"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/sequence.rs","byte_start":51850,"byte_end":51862,"line_start":357,"line_end":357,"column_start":39,"column_end":51},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":403},"to":{"krate":0,"index":347}},{"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","byte_start":2413,"byte_end":2421,"line_start":105,"line_end":105,"column_start":34,"column_end":42},"kind":"SuperTrait","from":{"krate":4,"index":568},"to":{"krate":0,"index":363}},{"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","byte_start":2548,"byte_end":2553,"line_start":110,"line_end":110,"column_start":35,"column_end":40},"kind":{"Impl":{"id":29}},"from":{"krate":4,"index":6202},"to":{"krate":0,"index":363}},{"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","byte_start":2852,"byte_end":2872,"line_start":125,"line_end":125,"column_start":36,"column_end":56},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":369},"to":{"krate":1,"index":1606}},{"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","byte_start":3135,"byte_end":3155,"line_start":135,"line_end":135,"column_start":33,"column_end":53},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":369},"to":{"krate":1,"index":1914}},{"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","byte_start":3398,"byte_end":3417,"line_start":147,"line_end":147,"column_start":36,"column_end":55},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":382},"to":{"krate":1,"index":1606}},{"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","byte_start":3681,"byte_end":3700,"line_start":157,"line_end":157,"column_start":33,"column_end":52},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":382},"to":{"krate":1,"index":1914}},{"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","byte_start":3764,"byte_end":3768,"line_start":159,"line_end":159,"column_start":54,"column_end":58},"kind":{"Impl":{"id":34}},"from":{"krate":4,"index":6146},"to":{"krate":0,"index":363}},{"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","byte_start":3913,"byte_end":3917,"line_start":164,"line_end":164,"column_start":54,"column_end":58},"kind":{"Impl":{"id":35}},"from":{"krate":4,"index":6146},"to":{"krate":0,"index":363}},{"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","byte_start":4254,"byte_end":4266,"line_start":176,"line_end":176,"column_start":50,"column_end":62},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":403},"to":{"krate":1,"index":1904}},{"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","byte_start":4325,"byte_end":4337,"line_start":177,"line_end":177,"column_start":50,"column_end":62},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":403},"to":{"krate":1,"index":1916}},{"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","byte_start":4369,"byte_end":4381,"line_start":179,"line_end":179,"column_start":22,"column_end":34},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":403},"to":{"krate":1,"index":2073}},{"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","byte_start":4612,"byte_end":4624,"line_start":191,"line_end":191,"column_start":25,"column_end":37},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":403},"to":{"krate":1,"index":2086}},{"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","byte_start":5221,"byte_end":5233,"line_start":212,"line_end":212,"column_start":28,"column_end":40},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":422},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","byte_start":6184,"byte_end":6196,"line_start":245,"line_end":245,"column_start":37,"column_end":49},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":422},"to":{"krate":1,"index":2097}},{"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","byte_start":6709,"byte_end":6722,"line_start":265,"line_end":265,"column_start":28,"column_end":41},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":437},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","byte_start":7355,"byte_end":7368,"line_start":286,"line_end":286,"column_start":37,"column_end":50},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":437},"to":{"krate":1,"index":2097}},{"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","byte_start":8139,"byte_end":8151,"line_start":320,"line_end":320,"column_start":32,"column_end":44},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":403},"to":{"krate":1,"index":4755}},{"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","byte_start":9146,"byte_end":9158,"line_start":361,"line_end":361,"column_start":42,"column_end":54},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":403},"to":{"krate":0,"index":261}},{"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","byte_start":11778,"byte_end":11790,"line_start":450,"line_end":450,"column_start":54,"column_end":66},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":403},"to":{"krate":0,"index":143}},{"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","byte_start":11986,"byte_end":11998,"line_start":458,"line_end":458,"column_start":45,"column_end":57},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":403},"to":{"krate":0,"index":163}},{"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","byte_start":13458,"byte_end":13470,"line_start":516,"line_end":516,"column_start":12,"column_end":24},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":403},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","byte_start":15168,"byte_end":15180,"line_start":573,"line_end":573,"column_start":19,"column_end":31},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":403},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"/home/rob/.cargo/registry/src/github.com-1ecc6299db9ec823/generic-array-0.14.2/src/lib.rs","byte_start":15582,"byte_end":15594,"line_start":587,"line_end":587,"column_start":12,"column_end":24},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":403},"to":{"krate":4294967295,"index":4294967295}}]}